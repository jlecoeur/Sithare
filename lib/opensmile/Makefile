# Makefile.in generated by automake 1.11.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# ACLOCAL_AMFLAGS = -I m4



pkgdatadir = $(datadir)/openSMILE
pkgincludedir = $(includedir)/openSMILE
pkglibdir = $(libdir)/openSMILE
pkglibexecdir = $(libexecdir)/openSMILE
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = SMILExtract$(EXEEXT)
subdir = .
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/configure AUTHORS COPYING ChangeLog INSTALL NEWS \
	compile config.guess config.sub depcomp install-sh ltmain.sh \
	missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/find_pthread.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/portaudio.m4 \
	$(top_srcdir)/m4/rtnnllib.m4 $(top_srcdir)/m4/semaineapi.m4 \
	$(top_srcdir)/m4/targets.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
libopensmile_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = src/libopensmile_la-configManager.lo \
	src/libopensmile_la-exceptions.lo \
	src/libopensmile_la-smileLogger.lo \
	src/libopensmile_la-commandlineParser.lo \
	src/libopensmile_la-smileUtil.lo \
	src/libopensmile_la-smileCommon.lo \
	src/libopensmile_la-smileComponent.lo \
	src/libopensmile_la-dataMemory.lo \
	src/libopensmile_la-buffer.lo \
	src/libopensmile_la-bowProducer.lo \
	src/libopensmile_la-signalGenerator.lo \
	src/libopensmile_la-vecGlMean.lo \
	src/libopensmile_la-fullinputMean.lo \
	src/libopensmile_la-vectorMVStd.lo \
	src/libopensmile_la-vectorMVN.lo \
	src/libopensmile_la-vectorHEQ.lo \
	src/libopensmile_la-vectorOperation.lo \
	src/libopensmile_la-vectorTransform.lo \
	src/libopensmile_la-turnDetector.lo \
	src/libopensmile_la-valbasedSelector.lo \
	src/libopensmile_la-vadV1.lo \
	src/libopensmile_la-speechLearn.lo \
	src/libopensmile_la-semaineSpeakerID1.lo \
	src/libopensmile_la-componentManager.lo \
	src/libopensmile_la-dataReader.lo \
	src/libopensmile_la-dataWriter.lo \
	src/libopensmile_la-dataSource.lo \
	src/libopensmile_la-dataSink.lo \
	src/libopensmile_la-dataProcessor.lo \
	src/libopensmile_la-dataSelector.lo \
	src/libopensmile_la-vectorConcat.lo \
	src/libopensmile_la-vectorProcessor.lo \
	src/libopensmile_la-winToVecProcessor.lo \
	src/libopensmile_la-windowProcessor.lo \
	src/libopensmile_la-portaudioSource.lo \
	src/libopensmile_la-portaudioSink.lo \
	src/libopensmile_la-portaudioDuplex.lo \
	src/libopensmile_la-portaudioDuplexS.lo \
	src/libopensmile_la-portaudioDuplexD.lo \
	src/libopensmile_la-preemphasis.lo \
	src/libopensmile_la-exampleSource.lo \
	src/libopensmile_la-exampleSink.lo \
	src/libopensmile_la-arffSink.lo \
	src/libopensmile_la-libsvmSink.lo \
	src/libopensmile_la-libsvmliveSink.lo \
	src/libopensmile_la-csvSink.lo \
	src/libopensmile_la-csvSource.lo \
	src/libopensmile_la-arffSource.lo \
	src/libopensmile_la-htkSink.lo \
	src/libopensmile_la-htkSource.lo \
	src/libopensmile_la-datadumpSink.lo \
	src/libopensmile_la-nullSink.lo \
	src/libopensmile_la-exampleProcessor.lo \
	src/libopensmile_la-vectorPreemphasis.lo \
	src/libopensmile_la-deltaRegression.lo \
	src/libopensmile_la-weightedDiff.lo \
	src/libopensmile_la-contourSmoother.lo \
	src/libopensmile_la-multipleWaveSources.lo \
	src/libopensmile_la-waveSource.lo \
	src/libopensmile_la-framer.lo src/libopensmile_la-windower.lo \
	src/libopensmile_la-spectral.lo \
	src/libopensmile_la-functionals.lo \
	src/libopensmile_la-functionalsVecToVec.lo \
	src/libopensmile_la-functionalComponent.lo \
	src/libopensmile_la-functionalExtremes.lo \
	src/libopensmile_la-functionalMeans.lo \
	src/libopensmile_la-functionalPeaks.lo \
	src/libopensmile_la-functionalSegments.lo \
	src/libopensmile_la-functionalOnset.lo \
	src/libopensmile_la-functionalSamples.lo \
	src/libopensmile_la-functionalMoments.lo \
	src/libopensmile_la-functionalCrossings.lo \
	src/libopensmile_la-functionalPercentiles.lo \
	src/libopensmile_la-functionalRegression.lo \
	src/libopensmile_la-functionalTimes.lo \
	src/libopensmile_la-functionalDCT.lo \
	src/libopensmile_la-energy.lo src/libopensmile_la-intensity.lo \
	src/libopensmile_la-dbA.lo src/libopensmile_la-amdf.lo \
	src/libopensmile_la-acf.lo src/libopensmile_la-tonespec.lo \
	src/libopensmile_la-tonefilt.lo src/libopensmile_la-fftsg.lo \
	src/libopensmile_la-transformFft.lo \
	src/libopensmile_la-fftmagphase.lo \
	src/libopensmile_la-specScale.lo \
	src/libopensmile_la-specResample.lo \
	src/libopensmile_la-melspec.lo src/libopensmile_la-chroma.lo \
	src/libopensmile_la-cens.lo \
	src/libopensmile_la-chromaFeatures.lo \
	src/libopensmile_la-mfcc.lo src/libopensmile_la-plp.lo \
	src/libopensmile_la-tumkwsaSink.lo \
	src/libopensmile_la-tumkwsjSink.lo \
	src/libopensmile_la-volanalyse.lo \
	src/libopensmile_la-fingerprint.lo \
	src/libopensmile_la-waveSink.lo \
	src/libopensmile_la-waveSinkCut.lo \
	src/libopensmile_la-pitchBase.lo \
	src/libopensmile_la-pitchShs.lo \
	src/libopensmile_la-pitchACF.lo \
	src/libopensmile_la-pitchHpsLinf.lo \
	src/libopensmile_la-pitchAmdfAcf.lo \
	src/libopensmile_la-pitchSmoother.lo \
	src/libopensmile_la-pitchJitter.lo \
	src/libopensmile_la-pitchDirection.lo \
	src/libopensmile_la-mzcr.lo src/libopensmile_la-lpc.lo \
	src/libopensmile_la-lsp.lo src/libopensmile_la-formantLpc.lo \
	src/libopensmile_la-formantSmoother.lo \
	src/libopensmile_la-echoAttenuator.lo \
	src/libopensmile_la-echoCanceller.lo \
	src/libopensmile_la-speexPreprocess.lo \
	src/libopensmile_la-speexResample.lo \
	src/libopensmile_la-smileResample.lo \
	src/libopensmile_la-libSamplerate.lo \
	src/libopensmile_la-stretchToTime.lo \
	src/libopensmile_la-chromaPerFrame.lo \
	src/libopensmile_la-chordFeatures.lo \
	src/libopensmile_la-channelMixer.lo \
	src/libopensmile_la-gsl_zsolve.lo svm/libopensmile_la-svm.lo \
	src/libopensmile_la-nnlPlugin.lo
am_libopensmile_la_OBJECTS = $(am__objects_1)
libopensmile_la_OBJECTS = $(am_libopensmile_la_OBJECTS)
libopensmile_la_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(libopensmile_la_LDFLAGS) $(LDFLAGS) -o $@
PROGRAMS = $(bin_PROGRAMS)
am_SMILExtract_OBJECTS = src/SMILExtract-SMILExtract.$(OBJEXT)
SMILExtract_OBJECTS = $(am_SMILExtract_OBJECTS)
SMILExtract_DEPENDENCIES = $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libopensmile_la_SOURCES) $(SMILExtract_SOURCES)
DIST_SOURCES = $(libopensmile_la_SOURCES) $(SMILExtract_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d "$(distdir)" \
    || { find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr "$(distdir)"; }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/julien/Bureau/sithare/lib/opensmile/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/julien/Bureau/sithare/lib/opensmile/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/julien/Bureau/sithare/lib/opensmile/missing --run autoconf
AUTOHEADER = ${SHELL} /home/julien/Bureau/sithare/lib/opensmile/missing --run autoheader
AUTOMAKE = ${SHELL} /home/julien/Bureau/sithare/lib/opensmile/missing --run automake-1.11
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLIB = -ldl
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/bin/ld
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/julien/Bureau/sithare/lib/opensmile/missing --run makeinfo
MANIFEST_TOOL = :
MKDIR_P = /bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = openSMILE
PACKAGE_BUGREPORT = 
PACKAGE_NAME = .
PACKAGE_STRING = . 1
PACKAGE_TARNAME = -
PACKAGE_URL = 
PACKAGE_VERSION = 1
PATH_SEPARATOR = :
PORTAUDIO_CPPFLAGS = 
PORTAUDIO_LDFLAGS = 
PORTAUDIO_ROOT = /usr
PTHREAD_CC = gcc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = -lpthread
RANLIB = ranlib
RTNNLLIB_CFLAGS = 
RTNNLLIB_LIBS = 
RTNNLLIB_PREFIX = 
SED = /bin/sed
SEMAINEAPI_CPPFLAGS = 
SEMAINEAPI_LDFLAGS = 
SEMAINEAPI_ROOT = /home/julien/Bureau/sithare
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.0.0
abs_builddir = /home/julien/Bureau/sithare/lib/opensmile
abs_srcdir = /home/julien/Bureau/sithare/lib/opensmile
abs_top_builddir = /home/julien/Bureau/sithare/lib/opensmile
abs_top_srcdir = /home/julien/Bureau/sithare/lib/opensmile
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/julien/Bureau/sithare/lib/opensmile/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
AUTOMAKE_OPTIONS = subdir-objects
# bin_PROGRAMS += SEMAINExtract
SMILE_SOURCES = \
	src/configManager.cpp \
	src/exceptions.cpp \
	src/smileLogger.cpp \
	src/commandlineParser.cpp \
	src/smileUtil.c \
	src/smileCommon.cpp \
	src/smileComponent.cpp \
	src/dataMemory.cpp \
	src/buffer.cpp \
	src/bowProducer.cpp \
	src/signalGenerator.cpp \
	src/vecGlMean.cpp \
	src/fullinputMean.cpp \
	src/vectorMVStd.cpp \
	src/vectorMVN.cpp \
	src/vectorHEQ.cpp \
	src/vectorOperation.cpp \
	src/vectorTransform.cpp \
	src/turnDetector.cpp \
	src/valbasedSelector.cpp \
	src/vadV1.cpp \
	src/speechLearn.cpp \
	src/semaineSpeakerID1.cpp \
	src/componentManager.cpp \
	src/dataReader.cpp \
	src/dataWriter.cpp \
	src/dataSource.cpp \
	src/dataSink.cpp \
	src/dataProcessor.cpp \
	src/dataSelector.cpp \
	src/vectorConcat.cpp \
	src/vectorProcessor.cpp \
	src/winToVecProcessor.cpp \
	src/windowProcessor.cpp \
	src/portaudioSource.cpp \
	src/portaudioSink.cpp \
	src/portaudioDuplex.cpp \
	src/portaudioDuplexS.cpp \
	src/portaudioDuplexD.cpp \
	src/preemphasis.cpp \
	src/exampleSource.cpp \
	src/exampleSink.cpp \
	src/arffSink.cpp \
	src/libsvmSink.cpp \
	src/libsvmliveSink.cpp \
	src/csvSink.cpp \
	src/csvSource.cpp \
	src/arffSource.cpp \
	src/htkSink.cpp \
	src/htkSource.cpp \
	src/datadumpSink.cpp \
	src/nullSink.cpp \
	src/exampleProcessor.cpp \
	src/vectorPreemphasis.cpp \
	src/deltaRegression.cpp \
	src/weightedDiff.cpp \
	src/contourSmoother.cpp \
	src/multipleWaveSources.cpp \
	src/waveSource.cpp \
	src/framer.cpp \
	src/windower.cpp \
	src/spectral.cpp \
	src/functionals.cpp \
	src/functionalsVecToVec.cpp \
	src/functionalComponent.cpp \
	src/functionalExtremes.cpp \
	src/functionalMeans.cpp \
	src/functionalPeaks.cpp \
	src/functionalSegments.cpp \
	src/functionalOnset.cpp \
	src/functionalSamples.cpp \
	src/functionalMoments.cpp \
	src/functionalCrossings.cpp \
	src/functionalPercentiles.cpp \
	src/functionalRegression.cpp \
	src/functionalTimes.cpp \
	src/functionalDCT.cpp \
	src/energy.cpp \
	src/intensity.cpp \
	src/dbA.cpp \
	src/amdf.cpp \
	src/acf.cpp \
	src/tonespec.cpp \
	src/tonefilt.cpp \
	src/fftsg.c \
	src/transformFft.cpp \
	src/fftmagphase.cpp \
	src/specScale.cpp \
	src/specResample.cpp \
	src/melspec.cpp \
	src/chroma.cpp \
	src/cens.cpp \
  	src/chromaFeatures.cpp  \
	src/mfcc.cpp \
	src/plp.cpp \
	src/tumkwsaSink.cpp \
	src/tumkwsjSink.cpp \
	src/volanalyse.cpp \
	src/fingerprint.cpp \
	src/waveSink.cpp \
	src/waveSinkCut.cpp \
	src/pitchBase.cpp \
	src/pitchShs.cpp \
	src/pitchACF.cpp \
	src/pitchHpsLinf.cpp \
	src/pitchAmdfAcf.cpp \
	src/pitchSmoother.cpp \
	src/pitchJitter.cpp \
	src/pitchDirection.cpp \
	src/mzcr.cpp \
	src/lpc.cpp \
	src/lsp.cpp \
	src/formantLpc.cpp \
	src/formantSmoother.cpp \
	src/echoAttenuator.cpp \
	src/echoCanceller.cpp \
	src/speexPreprocess.cpp \
	src/speexResample.cpp \
	src/smileResample.cpp \
	src/libSamplerate.cpp \
	src/stretchToTime.cpp \
	src/chromaPerFrame.cpp \
	src/chordFeatures.cpp \
	src/channelMixer.cpp \
	src/gsl_zsolve.c \
	svm/svm.cpp \
	src/nnlPlugin.cpp 

SMILE_CPPFLAGS = -Isrc $(SEMAINEAPI_CPPFLAGS) $(PORTAUDIO_CPPFLAGS) -ggdb $(ATKLIB_CPPFLAGS) $(PTHREAD_CFLAGS) $(RTNNLLIB_CFLAGS) 
SMILE_LIBS = $(PORTAUDIO_LDFLAGS) -lm $(SEMAINEAPI_LDFLAGS) $(ATKLIB_LDFLAGS) $(PTHREAD_LIBS) $(DLIB) $(RTNNLLIB_LIBS)
SMILExtract_SOURCES = src/SMILExtract.cpp 
SMILExtract_CPPFLAGS = $(SMILE_CPPFLAGS)
SMILExtract_LDADD = $(SMILE_LIBS) -lopensmile  
SEMAINExtract_SOURCES = \
	src/SEMAINExtract.cpp \
	src/activeMqSink.cpp \
	src/activeMqSource.cpp \
	src/TumFeatureExtractor.cpp \
	src/semaineEmmaSender.cpp 

SEMAINExtract_CPPFLAGS = $(SMILE_CPPFLAGS) 
SEMAINExtract_LDADD = $(SMILE_LIBS) -lopensmile  
lib_LTLIBRARIES = libopensmile.la
libopensmile_la_SOURCES = $(SMILE_SOURCES)
libopensmile_la_CPPFLAGS = $(SMILE_CPPFLAGS)
libopensmile_la_LIBADD = $(SMILE_LIBS)
libopensmile_la_LDFLAGS = -no-undefined
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-configManager.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-exceptions.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-smileLogger.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-commandlineParser.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-smileUtil.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-smileCommon.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-smileComponent.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dataMemory.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-buffer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-bowProducer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-signalGenerator.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vecGlMean.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-fullinputMean.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorMVStd.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorMVN.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorHEQ.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorOperation.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorTransform.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-turnDetector.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-valbasedSelector.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vadV1.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-speechLearn.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-semaineSpeakerID1.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-componentManager.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dataReader.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dataWriter.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dataSource.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dataSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dataProcessor.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dataSelector.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorConcat.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorProcessor.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-winToVecProcessor.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-windowProcessor.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-portaudioSource.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-portaudioSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-portaudioDuplex.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-portaudioDuplexS.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-portaudioDuplexD.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-preemphasis.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-exampleSource.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-exampleSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-arffSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-libsvmSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-libsvmliveSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-csvSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-csvSource.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-arffSource.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-htkSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-htkSource.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-datadumpSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-nullSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-exampleProcessor.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-vectorPreemphasis.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-deltaRegression.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-weightedDiff.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-contourSmoother.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-multipleWaveSources.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-waveSource.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-framer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-windower.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-spectral.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionals.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalsVecToVec.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalComponent.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalExtremes.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalMeans.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalPeaks.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalSegments.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalOnset.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalSamples.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalMoments.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalCrossings.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalPercentiles.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalRegression.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalTimes.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-functionalDCT.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-energy.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-intensity.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-dbA.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-amdf.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-acf.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-tonespec.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-tonefilt.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-fftsg.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-transformFft.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-fftmagphase.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-specScale.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-specResample.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-melspec.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-chroma.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-cens.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-chromaFeatures.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-mfcc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-plp.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-tumkwsaSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-tumkwsjSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-volanalyse.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-fingerprint.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-waveSink.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-waveSinkCut.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchBase.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchShs.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchACF.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchHpsLinf.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchAmdfAcf.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchSmoother.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchJitter.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-pitchDirection.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-mzcr.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-lpc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-lsp.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-formantLpc.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-formantSmoother.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-echoAttenuator.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-echoCanceller.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-speexPreprocess.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-speexResample.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-smileResample.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-libSamplerate.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-stretchToTime.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-chromaPerFrame.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-chordFeatures.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-channelMixer.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-gsl_zsolve.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
svm/$(am__dirstamp):
	@$(MKDIR_P) svm
	@: > svm/$(am__dirstamp)
svm/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) svm/$(DEPDIR)
	@: > svm/$(DEPDIR)/$(am__dirstamp)
svm/libopensmile_la-svm.lo: svm/$(am__dirstamp) \
	svm/$(DEPDIR)/$(am__dirstamp)
src/libopensmile_la-nnlPlugin.lo: src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
libopensmile.la: $(libopensmile_la_OBJECTS) $(libopensmile_la_DEPENDENCIES) 
	$(libopensmile_la_LINK) -rpath $(libdir) $(libopensmile_la_OBJECTS) $(libopensmile_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
src/SMILExtract-SMILExtract.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
SMILExtract$(EXEEXT): $(SMILExtract_OBJECTS) $(SMILExtract_DEPENDENCIES) 
	@rm -f SMILExtract$(EXEEXT)
	$(CXXLINK) $(SMILExtract_OBJECTS) $(SMILExtract_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/SMILExtract-SMILExtract.$(OBJEXT)
	-rm -f src/libopensmile_la-acf.$(OBJEXT)
	-rm -f src/libopensmile_la-acf.lo
	-rm -f src/libopensmile_la-amdf.$(OBJEXT)
	-rm -f src/libopensmile_la-amdf.lo
	-rm -f src/libopensmile_la-arffSink.$(OBJEXT)
	-rm -f src/libopensmile_la-arffSink.lo
	-rm -f src/libopensmile_la-arffSource.$(OBJEXT)
	-rm -f src/libopensmile_la-arffSource.lo
	-rm -f src/libopensmile_la-bowProducer.$(OBJEXT)
	-rm -f src/libopensmile_la-bowProducer.lo
	-rm -f src/libopensmile_la-buffer.$(OBJEXT)
	-rm -f src/libopensmile_la-buffer.lo
	-rm -f src/libopensmile_la-cens.$(OBJEXT)
	-rm -f src/libopensmile_la-cens.lo
	-rm -f src/libopensmile_la-channelMixer.$(OBJEXT)
	-rm -f src/libopensmile_la-channelMixer.lo
	-rm -f src/libopensmile_la-chordFeatures.$(OBJEXT)
	-rm -f src/libopensmile_la-chordFeatures.lo
	-rm -f src/libopensmile_la-chroma.$(OBJEXT)
	-rm -f src/libopensmile_la-chroma.lo
	-rm -f src/libopensmile_la-chromaFeatures.$(OBJEXT)
	-rm -f src/libopensmile_la-chromaFeatures.lo
	-rm -f src/libopensmile_la-chromaPerFrame.$(OBJEXT)
	-rm -f src/libopensmile_la-chromaPerFrame.lo
	-rm -f src/libopensmile_la-commandlineParser.$(OBJEXT)
	-rm -f src/libopensmile_la-commandlineParser.lo
	-rm -f src/libopensmile_la-componentManager.$(OBJEXT)
	-rm -f src/libopensmile_la-componentManager.lo
	-rm -f src/libopensmile_la-configManager.$(OBJEXT)
	-rm -f src/libopensmile_la-configManager.lo
	-rm -f src/libopensmile_la-contourSmoother.$(OBJEXT)
	-rm -f src/libopensmile_la-contourSmoother.lo
	-rm -f src/libopensmile_la-csvSink.$(OBJEXT)
	-rm -f src/libopensmile_la-csvSink.lo
	-rm -f src/libopensmile_la-csvSource.$(OBJEXT)
	-rm -f src/libopensmile_la-csvSource.lo
	-rm -f src/libopensmile_la-dataMemory.$(OBJEXT)
	-rm -f src/libopensmile_la-dataMemory.lo
	-rm -f src/libopensmile_la-dataProcessor.$(OBJEXT)
	-rm -f src/libopensmile_la-dataProcessor.lo
	-rm -f src/libopensmile_la-dataReader.$(OBJEXT)
	-rm -f src/libopensmile_la-dataReader.lo
	-rm -f src/libopensmile_la-dataSelector.$(OBJEXT)
	-rm -f src/libopensmile_la-dataSelector.lo
	-rm -f src/libopensmile_la-dataSink.$(OBJEXT)
	-rm -f src/libopensmile_la-dataSink.lo
	-rm -f src/libopensmile_la-dataSource.$(OBJEXT)
	-rm -f src/libopensmile_la-dataSource.lo
	-rm -f src/libopensmile_la-dataWriter.$(OBJEXT)
	-rm -f src/libopensmile_la-dataWriter.lo
	-rm -f src/libopensmile_la-datadumpSink.$(OBJEXT)
	-rm -f src/libopensmile_la-datadumpSink.lo
	-rm -f src/libopensmile_la-dbA.$(OBJEXT)
	-rm -f src/libopensmile_la-dbA.lo
	-rm -f src/libopensmile_la-deltaRegression.$(OBJEXT)
	-rm -f src/libopensmile_la-deltaRegression.lo
	-rm -f src/libopensmile_la-echoAttenuator.$(OBJEXT)
	-rm -f src/libopensmile_la-echoAttenuator.lo
	-rm -f src/libopensmile_la-echoCanceller.$(OBJEXT)
	-rm -f src/libopensmile_la-echoCanceller.lo
	-rm -f src/libopensmile_la-energy.$(OBJEXT)
	-rm -f src/libopensmile_la-energy.lo
	-rm -f src/libopensmile_la-exampleProcessor.$(OBJEXT)
	-rm -f src/libopensmile_la-exampleProcessor.lo
	-rm -f src/libopensmile_la-exampleSink.$(OBJEXT)
	-rm -f src/libopensmile_la-exampleSink.lo
	-rm -f src/libopensmile_la-exampleSource.$(OBJEXT)
	-rm -f src/libopensmile_la-exampleSource.lo
	-rm -f src/libopensmile_la-exceptions.$(OBJEXT)
	-rm -f src/libopensmile_la-exceptions.lo
	-rm -f src/libopensmile_la-fftmagphase.$(OBJEXT)
	-rm -f src/libopensmile_la-fftmagphase.lo
	-rm -f src/libopensmile_la-fftsg.$(OBJEXT)
	-rm -f src/libopensmile_la-fftsg.lo
	-rm -f src/libopensmile_la-fingerprint.$(OBJEXT)
	-rm -f src/libopensmile_la-fingerprint.lo
	-rm -f src/libopensmile_la-formantLpc.$(OBJEXT)
	-rm -f src/libopensmile_la-formantLpc.lo
	-rm -f src/libopensmile_la-formantSmoother.$(OBJEXT)
	-rm -f src/libopensmile_la-formantSmoother.lo
	-rm -f src/libopensmile_la-framer.$(OBJEXT)
	-rm -f src/libopensmile_la-framer.lo
	-rm -f src/libopensmile_la-fullinputMean.$(OBJEXT)
	-rm -f src/libopensmile_la-fullinputMean.lo
	-rm -f src/libopensmile_la-functionalComponent.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalComponent.lo
	-rm -f src/libopensmile_la-functionalCrossings.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalCrossings.lo
	-rm -f src/libopensmile_la-functionalDCT.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalDCT.lo
	-rm -f src/libopensmile_la-functionalExtremes.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalExtremes.lo
	-rm -f src/libopensmile_la-functionalMeans.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalMeans.lo
	-rm -f src/libopensmile_la-functionalMoments.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalMoments.lo
	-rm -f src/libopensmile_la-functionalOnset.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalOnset.lo
	-rm -f src/libopensmile_la-functionalPeaks.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalPeaks.lo
	-rm -f src/libopensmile_la-functionalPercentiles.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalPercentiles.lo
	-rm -f src/libopensmile_la-functionalRegression.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalRegression.lo
	-rm -f src/libopensmile_la-functionalSamples.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalSamples.lo
	-rm -f src/libopensmile_la-functionalSegments.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalSegments.lo
	-rm -f src/libopensmile_la-functionalTimes.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalTimes.lo
	-rm -f src/libopensmile_la-functionals.$(OBJEXT)
	-rm -f src/libopensmile_la-functionals.lo
	-rm -f src/libopensmile_la-functionalsVecToVec.$(OBJEXT)
	-rm -f src/libopensmile_la-functionalsVecToVec.lo
	-rm -f src/libopensmile_la-gsl_zsolve.$(OBJEXT)
	-rm -f src/libopensmile_la-gsl_zsolve.lo
	-rm -f src/libopensmile_la-htkSink.$(OBJEXT)
	-rm -f src/libopensmile_la-htkSink.lo
	-rm -f src/libopensmile_la-htkSource.$(OBJEXT)
	-rm -f src/libopensmile_la-htkSource.lo
	-rm -f src/libopensmile_la-intensity.$(OBJEXT)
	-rm -f src/libopensmile_la-intensity.lo
	-rm -f src/libopensmile_la-libSamplerate.$(OBJEXT)
	-rm -f src/libopensmile_la-libSamplerate.lo
	-rm -f src/libopensmile_la-libsvmSink.$(OBJEXT)
	-rm -f src/libopensmile_la-libsvmSink.lo
	-rm -f src/libopensmile_la-libsvmliveSink.$(OBJEXT)
	-rm -f src/libopensmile_la-libsvmliveSink.lo
	-rm -f src/libopensmile_la-lpc.$(OBJEXT)
	-rm -f src/libopensmile_la-lpc.lo
	-rm -f src/libopensmile_la-lsp.$(OBJEXT)
	-rm -f src/libopensmile_la-lsp.lo
	-rm -f src/libopensmile_la-melspec.$(OBJEXT)
	-rm -f src/libopensmile_la-melspec.lo
	-rm -f src/libopensmile_la-mfcc.$(OBJEXT)
	-rm -f src/libopensmile_la-mfcc.lo
	-rm -f src/libopensmile_la-multipleWaveSources.$(OBJEXT)
	-rm -f src/libopensmile_la-multipleWaveSources.lo
	-rm -f src/libopensmile_la-mzcr.$(OBJEXT)
	-rm -f src/libopensmile_la-mzcr.lo
	-rm -f src/libopensmile_la-nnlPlugin.$(OBJEXT)
	-rm -f src/libopensmile_la-nnlPlugin.lo
	-rm -f src/libopensmile_la-nullSink.$(OBJEXT)
	-rm -f src/libopensmile_la-nullSink.lo
	-rm -f src/libopensmile_la-pitchACF.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchACF.lo
	-rm -f src/libopensmile_la-pitchAmdfAcf.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchAmdfAcf.lo
	-rm -f src/libopensmile_la-pitchBase.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchBase.lo
	-rm -f src/libopensmile_la-pitchDirection.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchDirection.lo
	-rm -f src/libopensmile_la-pitchHpsLinf.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchHpsLinf.lo
	-rm -f src/libopensmile_la-pitchJitter.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchJitter.lo
	-rm -f src/libopensmile_la-pitchShs.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchShs.lo
	-rm -f src/libopensmile_la-pitchSmoother.$(OBJEXT)
	-rm -f src/libopensmile_la-pitchSmoother.lo
	-rm -f src/libopensmile_la-plp.$(OBJEXT)
	-rm -f src/libopensmile_la-plp.lo
	-rm -f src/libopensmile_la-portaudioDuplex.$(OBJEXT)
	-rm -f src/libopensmile_la-portaudioDuplex.lo
	-rm -f src/libopensmile_la-portaudioDuplexD.$(OBJEXT)
	-rm -f src/libopensmile_la-portaudioDuplexD.lo
	-rm -f src/libopensmile_la-portaudioDuplexS.$(OBJEXT)
	-rm -f src/libopensmile_la-portaudioDuplexS.lo
	-rm -f src/libopensmile_la-portaudioSink.$(OBJEXT)
	-rm -f src/libopensmile_la-portaudioSink.lo
	-rm -f src/libopensmile_la-portaudioSource.$(OBJEXT)
	-rm -f src/libopensmile_la-portaudioSource.lo
	-rm -f src/libopensmile_la-preemphasis.$(OBJEXT)
	-rm -f src/libopensmile_la-preemphasis.lo
	-rm -f src/libopensmile_la-semaineSpeakerID1.$(OBJEXT)
	-rm -f src/libopensmile_la-semaineSpeakerID1.lo
	-rm -f src/libopensmile_la-signalGenerator.$(OBJEXT)
	-rm -f src/libopensmile_la-signalGenerator.lo
	-rm -f src/libopensmile_la-smileCommon.$(OBJEXT)
	-rm -f src/libopensmile_la-smileCommon.lo
	-rm -f src/libopensmile_la-smileComponent.$(OBJEXT)
	-rm -f src/libopensmile_la-smileComponent.lo
	-rm -f src/libopensmile_la-smileLogger.$(OBJEXT)
	-rm -f src/libopensmile_la-smileLogger.lo
	-rm -f src/libopensmile_la-smileResample.$(OBJEXT)
	-rm -f src/libopensmile_la-smileResample.lo
	-rm -f src/libopensmile_la-smileUtil.$(OBJEXT)
	-rm -f src/libopensmile_la-smileUtil.lo
	-rm -f src/libopensmile_la-specResample.$(OBJEXT)
	-rm -f src/libopensmile_la-specResample.lo
	-rm -f src/libopensmile_la-specScale.$(OBJEXT)
	-rm -f src/libopensmile_la-specScale.lo
	-rm -f src/libopensmile_la-spectral.$(OBJEXT)
	-rm -f src/libopensmile_la-spectral.lo
	-rm -f src/libopensmile_la-speechLearn.$(OBJEXT)
	-rm -f src/libopensmile_la-speechLearn.lo
	-rm -f src/libopensmile_la-speexPreprocess.$(OBJEXT)
	-rm -f src/libopensmile_la-speexPreprocess.lo
	-rm -f src/libopensmile_la-speexResample.$(OBJEXT)
	-rm -f src/libopensmile_la-speexResample.lo
	-rm -f src/libopensmile_la-stretchToTime.$(OBJEXT)
	-rm -f src/libopensmile_la-stretchToTime.lo
	-rm -f src/libopensmile_la-tonefilt.$(OBJEXT)
	-rm -f src/libopensmile_la-tonefilt.lo
	-rm -f src/libopensmile_la-tonespec.$(OBJEXT)
	-rm -f src/libopensmile_la-tonespec.lo
	-rm -f src/libopensmile_la-transformFft.$(OBJEXT)
	-rm -f src/libopensmile_la-transformFft.lo
	-rm -f src/libopensmile_la-tumkwsaSink.$(OBJEXT)
	-rm -f src/libopensmile_la-tumkwsaSink.lo
	-rm -f src/libopensmile_la-tumkwsjSink.$(OBJEXT)
	-rm -f src/libopensmile_la-tumkwsjSink.lo
	-rm -f src/libopensmile_la-turnDetector.$(OBJEXT)
	-rm -f src/libopensmile_la-turnDetector.lo
	-rm -f src/libopensmile_la-vadV1.$(OBJEXT)
	-rm -f src/libopensmile_la-vadV1.lo
	-rm -f src/libopensmile_la-valbasedSelector.$(OBJEXT)
	-rm -f src/libopensmile_la-valbasedSelector.lo
	-rm -f src/libopensmile_la-vecGlMean.$(OBJEXT)
	-rm -f src/libopensmile_la-vecGlMean.lo
	-rm -f src/libopensmile_la-vectorConcat.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorConcat.lo
	-rm -f src/libopensmile_la-vectorHEQ.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorHEQ.lo
	-rm -f src/libopensmile_la-vectorMVN.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorMVN.lo
	-rm -f src/libopensmile_la-vectorMVStd.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorMVStd.lo
	-rm -f src/libopensmile_la-vectorOperation.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorOperation.lo
	-rm -f src/libopensmile_la-vectorPreemphasis.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorPreemphasis.lo
	-rm -f src/libopensmile_la-vectorProcessor.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorProcessor.lo
	-rm -f src/libopensmile_la-vectorTransform.$(OBJEXT)
	-rm -f src/libopensmile_la-vectorTransform.lo
	-rm -f src/libopensmile_la-volanalyse.$(OBJEXT)
	-rm -f src/libopensmile_la-volanalyse.lo
	-rm -f src/libopensmile_la-waveSink.$(OBJEXT)
	-rm -f src/libopensmile_la-waveSink.lo
	-rm -f src/libopensmile_la-waveSinkCut.$(OBJEXT)
	-rm -f src/libopensmile_la-waveSinkCut.lo
	-rm -f src/libopensmile_la-waveSource.$(OBJEXT)
	-rm -f src/libopensmile_la-waveSource.lo
	-rm -f src/libopensmile_la-weightedDiff.$(OBJEXT)
	-rm -f src/libopensmile_la-weightedDiff.lo
	-rm -f src/libopensmile_la-winToVecProcessor.$(OBJEXT)
	-rm -f src/libopensmile_la-winToVecProcessor.lo
	-rm -f src/libopensmile_la-windowProcessor.$(OBJEXT)
	-rm -f src/libopensmile_la-windowProcessor.lo
	-rm -f src/libopensmile_la-windower.$(OBJEXT)
	-rm -f src/libopensmile_la-windower.lo
	-rm -f svm/libopensmile_la-svm.$(OBJEXT)
	-rm -f svm/libopensmile_la-svm.lo

distclean-compile:
	-rm -f *.tab.c

include src/$(DEPDIR)/SMILExtract-SMILExtract.Po
include src/$(DEPDIR)/libopensmile_la-acf.Plo
include src/$(DEPDIR)/libopensmile_la-amdf.Plo
include src/$(DEPDIR)/libopensmile_la-arffSink.Plo
include src/$(DEPDIR)/libopensmile_la-arffSource.Plo
include src/$(DEPDIR)/libopensmile_la-bowProducer.Plo
include src/$(DEPDIR)/libopensmile_la-buffer.Plo
include src/$(DEPDIR)/libopensmile_la-cens.Plo
include src/$(DEPDIR)/libopensmile_la-channelMixer.Plo
include src/$(DEPDIR)/libopensmile_la-chordFeatures.Plo
include src/$(DEPDIR)/libopensmile_la-chroma.Plo
include src/$(DEPDIR)/libopensmile_la-chromaFeatures.Plo
include src/$(DEPDIR)/libopensmile_la-chromaPerFrame.Plo
include src/$(DEPDIR)/libopensmile_la-commandlineParser.Plo
include src/$(DEPDIR)/libopensmile_la-componentManager.Plo
include src/$(DEPDIR)/libopensmile_la-configManager.Plo
include src/$(DEPDIR)/libopensmile_la-contourSmoother.Plo
include src/$(DEPDIR)/libopensmile_la-csvSink.Plo
include src/$(DEPDIR)/libopensmile_la-csvSource.Plo
include src/$(DEPDIR)/libopensmile_la-dataMemory.Plo
include src/$(DEPDIR)/libopensmile_la-dataProcessor.Plo
include src/$(DEPDIR)/libopensmile_la-dataReader.Plo
include src/$(DEPDIR)/libopensmile_la-dataSelector.Plo
include src/$(DEPDIR)/libopensmile_la-dataSink.Plo
include src/$(DEPDIR)/libopensmile_la-dataSource.Plo
include src/$(DEPDIR)/libopensmile_la-dataWriter.Plo
include src/$(DEPDIR)/libopensmile_la-datadumpSink.Plo
include src/$(DEPDIR)/libopensmile_la-dbA.Plo
include src/$(DEPDIR)/libopensmile_la-deltaRegression.Plo
include src/$(DEPDIR)/libopensmile_la-echoAttenuator.Plo
include src/$(DEPDIR)/libopensmile_la-echoCanceller.Plo
include src/$(DEPDIR)/libopensmile_la-energy.Plo
include src/$(DEPDIR)/libopensmile_la-exampleProcessor.Plo
include src/$(DEPDIR)/libopensmile_la-exampleSink.Plo
include src/$(DEPDIR)/libopensmile_la-exampleSource.Plo
include src/$(DEPDIR)/libopensmile_la-exceptions.Plo
include src/$(DEPDIR)/libopensmile_la-fftmagphase.Plo
include src/$(DEPDIR)/libopensmile_la-fftsg.Plo
include src/$(DEPDIR)/libopensmile_la-fingerprint.Plo
include src/$(DEPDIR)/libopensmile_la-formantLpc.Plo
include src/$(DEPDIR)/libopensmile_la-formantSmoother.Plo
include src/$(DEPDIR)/libopensmile_la-framer.Plo
include src/$(DEPDIR)/libopensmile_la-fullinputMean.Plo
include src/$(DEPDIR)/libopensmile_la-functionalComponent.Plo
include src/$(DEPDIR)/libopensmile_la-functionalCrossings.Plo
include src/$(DEPDIR)/libopensmile_la-functionalDCT.Plo
include src/$(DEPDIR)/libopensmile_la-functionalExtremes.Plo
include src/$(DEPDIR)/libopensmile_la-functionalMeans.Plo
include src/$(DEPDIR)/libopensmile_la-functionalMoments.Plo
include src/$(DEPDIR)/libopensmile_la-functionalOnset.Plo
include src/$(DEPDIR)/libopensmile_la-functionalPeaks.Plo
include src/$(DEPDIR)/libopensmile_la-functionalPercentiles.Plo
include src/$(DEPDIR)/libopensmile_la-functionalRegression.Plo
include src/$(DEPDIR)/libopensmile_la-functionalSamples.Plo
include src/$(DEPDIR)/libopensmile_la-functionalSegments.Plo
include src/$(DEPDIR)/libopensmile_la-functionalTimes.Plo
include src/$(DEPDIR)/libopensmile_la-functionals.Plo
include src/$(DEPDIR)/libopensmile_la-functionalsVecToVec.Plo
include src/$(DEPDIR)/libopensmile_la-gsl_zsolve.Plo
include src/$(DEPDIR)/libopensmile_la-htkSink.Plo
include src/$(DEPDIR)/libopensmile_la-htkSource.Plo
include src/$(DEPDIR)/libopensmile_la-intensity.Plo
include src/$(DEPDIR)/libopensmile_la-libSamplerate.Plo
include src/$(DEPDIR)/libopensmile_la-libsvmSink.Plo
include src/$(DEPDIR)/libopensmile_la-libsvmliveSink.Plo
include src/$(DEPDIR)/libopensmile_la-lpc.Plo
include src/$(DEPDIR)/libopensmile_la-lsp.Plo
include src/$(DEPDIR)/libopensmile_la-melspec.Plo
include src/$(DEPDIR)/libopensmile_la-mfcc.Plo
include src/$(DEPDIR)/libopensmile_la-multipleWaveSources.Plo
include src/$(DEPDIR)/libopensmile_la-mzcr.Plo
include src/$(DEPDIR)/libopensmile_la-nnlPlugin.Plo
include src/$(DEPDIR)/libopensmile_la-nullSink.Plo
include src/$(DEPDIR)/libopensmile_la-pitchACF.Plo
include src/$(DEPDIR)/libopensmile_la-pitchAmdfAcf.Plo
include src/$(DEPDIR)/libopensmile_la-pitchBase.Plo
include src/$(DEPDIR)/libopensmile_la-pitchDirection.Plo
include src/$(DEPDIR)/libopensmile_la-pitchHpsLinf.Plo
include src/$(DEPDIR)/libopensmile_la-pitchJitter.Plo
include src/$(DEPDIR)/libopensmile_la-pitchShs.Plo
include src/$(DEPDIR)/libopensmile_la-pitchSmoother.Plo
include src/$(DEPDIR)/libopensmile_la-plp.Plo
include src/$(DEPDIR)/libopensmile_la-portaudioDuplex.Plo
include src/$(DEPDIR)/libopensmile_la-portaudioDuplexD.Plo
include src/$(DEPDIR)/libopensmile_la-portaudioDuplexS.Plo
include src/$(DEPDIR)/libopensmile_la-portaudioSink.Plo
include src/$(DEPDIR)/libopensmile_la-portaudioSource.Plo
include src/$(DEPDIR)/libopensmile_la-preemphasis.Plo
include src/$(DEPDIR)/libopensmile_la-semaineSpeakerID1.Plo
include src/$(DEPDIR)/libopensmile_la-signalGenerator.Plo
include src/$(DEPDIR)/libopensmile_la-smileCommon.Plo
include src/$(DEPDIR)/libopensmile_la-smileComponent.Plo
include src/$(DEPDIR)/libopensmile_la-smileLogger.Plo
include src/$(DEPDIR)/libopensmile_la-smileResample.Plo
include src/$(DEPDIR)/libopensmile_la-smileUtil.Plo
include src/$(DEPDIR)/libopensmile_la-specResample.Plo
include src/$(DEPDIR)/libopensmile_la-specScale.Plo
include src/$(DEPDIR)/libopensmile_la-spectral.Plo
include src/$(DEPDIR)/libopensmile_la-speechLearn.Plo
include src/$(DEPDIR)/libopensmile_la-speexPreprocess.Plo
include src/$(DEPDIR)/libopensmile_la-speexResample.Plo
include src/$(DEPDIR)/libopensmile_la-stretchToTime.Plo
include src/$(DEPDIR)/libopensmile_la-tonefilt.Plo
include src/$(DEPDIR)/libopensmile_la-tonespec.Plo
include src/$(DEPDIR)/libopensmile_la-transformFft.Plo
include src/$(DEPDIR)/libopensmile_la-tumkwsaSink.Plo
include src/$(DEPDIR)/libopensmile_la-tumkwsjSink.Plo
include src/$(DEPDIR)/libopensmile_la-turnDetector.Plo
include src/$(DEPDIR)/libopensmile_la-vadV1.Plo
include src/$(DEPDIR)/libopensmile_la-valbasedSelector.Plo
include src/$(DEPDIR)/libopensmile_la-vecGlMean.Plo
include src/$(DEPDIR)/libopensmile_la-vectorConcat.Plo
include src/$(DEPDIR)/libopensmile_la-vectorHEQ.Plo
include src/$(DEPDIR)/libopensmile_la-vectorMVN.Plo
include src/$(DEPDIR)/libopensmile_la-vectorMVStd.Plo
include src/$(DEPDIR)/libopensmile_la-vectorOperation.Plo
include src/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Plo
include src/$(DEPDIR)/libopensmile_la-vectorProcessor.Plo
include src/$(DEPDIR)/libopensmile_la-vectorTransform.Plo
include src/$(DEPDIR)/libopensmile_la-volanalyse.Plo
include src/$(DEPDIR)/libopensmile_la-waveSink.Plo
include src/$(DEPDIR)/libopensmile_la-waveSinkCut.Plo
include src/$(DEPDIR)/libopensmile_la-waveSource.Plo
include src/$(DEPDIR)/libopensmile_la-weightedDiff.Plo
include src/$(DEPDIR)/libopensmile_la-winToVecProcessor.Plo
include src/$(DEPDIR)/libopensmile_la-windowProcessor.Plo
include src/$(DEPDIR)/libopensmile_la-windower.Plo
include svm/$(DEPDIR)/libopensmile_la-svm.Plo

.c.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

src/libopensmile_la-smileUtil.lo: src/smileUtil.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/libopensmile_la-smileUtil.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-smileUtil.Tpo -c -o src/libopensmile_la-smileUtil.lo `test -f 'src/smileUtil.c' || echo '$(srcdir)/'`src/smileUtil.c
	$(am__mv) src/$(DEPDIR)/libopensmile_la-smileUtil.Tpo src/$(DEPDIR)/libopensmile_la-smileUtil.Plo
#	source='src/smileUtil.c' object='src/libopensmile_la-smileUtil.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/libopensmile_la-smileUtil.lo `test -f 'src/smileUtil.c' || echo '$(srcdir)/'`src/smileUtil.c

src/libopensmile_la-fftsg.lo: src/fftsg.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/libopensmile_la-fftsg.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-fftsg.Tpo -c -o src/libopensmile_la-fftsg.lo `test -f 'src/fftsg.c' || echo '$(srcdir)/'`src/fftsg.c
	$(am__mv) src/$(DEPDIR)/libopensmile_la-fftsg.Tpo src/$(DEPDIR)/libopensmile_la-fftsg.Plo
#	source='src/fftsg.c' object='src/libopensmile_la-fftsg.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/libopensmile_la-fftsg.lo `test -f 'src/fftsg.c' || echo '$(srcdir)/'`src/fftsg.c

src/libopensmile_la-gsl_zsolve.lo: src/gsl_zsolve.c
	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/libopensmile_la-gsl_zsolve.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-gsl_zsolve.Tpo -c -o src/libopensmile_la-gsl_zsolve.lo `test -f 'src/gsl_zsolve.c' || echo '$(srcdir)/'`src/gsl_zsolve.c
	$(am__mv) src/$(DEPDIR)/libopensmile_la-gsl_zsolve.Tpo src/$(DEPDIR)/libopensmile_la-gsl_zsolve.Plo
#	source='src/gsl_zsolve.c' object='src/libopensmile_la-gsl_zsolve.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/libopensmile_la-gsl_zsolve.lo `test -f 'src/gsl_zsolve.c' || echo '$(srcdir)/'`src/gsl_zsolve.c

.cpp.o:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

src/libopensmile_la-configManager.lo: src/configManager.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-configManager.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-configManager.Tpo -c -o src/libopensmile_la-configManager.lo `test -f 'src/configManager.cpp' || echo '$(srcdir)/'`src/configManager.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-configManager.Tpo src/$(DEPDIR)/libopensmile_la-configManager.Plo
#	source='src/configManager.cpp' object='src/libopensmile_la-configManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-configManager.lo `test -f 'src/configManager.cpp' || echo '$(srcdir)/'`src/configManager.cpp

src/libopensmile_la-exceptions.lo: src/exceptions.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-exceptions.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-exceptions.Tpo -c -o src/libopensmile_la-exceptions.lo `test -f 'src/exceptions.cpp' || echo '$(srcdir)/'`src/exceptions.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-exceptions.Tpo src/$(DEPDIR)/libopensmile_la-exceptions.Plo
#	source='src/exceptions.cpp' object='src/libopensmile_la-exceptions.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-exceptions.lo `test -f 'src/exceptions.cpp' || echo '$(srcdir)/'`src/exceptions.cpp

src/libopensmile_la-smileLogger.lo: src/smileLogger.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-smileLogger.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-smileLogger.Tpo -c -o src/libopensmile_la-smileLogger.lo `test -f 'src/smileLogger.cpp' || echo '$(srcdir)/'`src/smileLogger.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-smileLogger.Tpo src/$(DEPDIR)/libopensmile_la-smileLogger.Plo
#	source='src/smileLogger.cpp' object='src/libopensmile_la-smileLogger.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-smileLogger.lo `test -f 'src/smileLogger.cpp' || echo '$(srcdir)/'`src/smileLogger.cpp

src/libopensmile_la-commandlineParser.lo: src/commandlineParser.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-commandlineParser.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-commandlineParser.Tpo -c -o src/libopensmile_la-commandlineParser.lo `test -f 'src/commandlineParser.cpp' || echo '$(srcdir)/'`src/commandlineParser.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-commandlineParser.Tpo src/$(DEPDIR)/libopensmile_la-commandlineParser.Plo
#	source='src/commandlineParser.cpp' object='src/libopensmile_la-commandlineParser.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-commandlineParser.lo `test -f 'src/commandlineParser.cpp' || echo '$(srcdir)/'`src/commandlineParser.cpp

src/libopensmile_la-smileCommon.lo: src/smileCommon.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-smileCommon.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-smileCommon.Tpo -c -o src/libopensmile_la-smileCommon.lo `test -f 'src/smileCommon.cpp' || echo '$(srcdir)/'`src/smileCommon.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-smileCommon.Tpo src/$(DEPDIR)/libopensmile_la-smileCommon.Plo
#	source='src/smileCommon.cpp' object='src/libopensmile_la-smileCommon.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-smileCommon.lo `test -f 'src/smileCommon.cpp' || echo '$(srcdir)/'`src/smileCommon.cpp

src/libopensmile_la-smileComponent.lo: src/smileComponent.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-smileComponent.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-smileComponent.Tpo -c -o src/libopensmile_la-smileComponent.lo `test -f 'src/smileComponent.cpp' || echo '$(srcdir)/'`src/smileComponent.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-smileComponent.Tpo src/$(DEPDIR)/libopensmile_la-smileComponent.Plo
#	source='src/smileComponent.cpp' object='src/libopensmile_la-smileComponent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-smileComponent.lo `test -f 'src/smileComponent.cpp' || echo '$(srcdir)/'`src/smileComponent.cpp

src/libopensmile_la-dataMemory.lo: src/dataMemory.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dataMemory.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dataMemory.Tpo -c -o src/libopensmile_la-dataMemory.lo `test -f 'src/dataMemory.cpp' || echo '$(srcdir)/'`src/dataMemory.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dataMemory.Tpo src/$(DEPDIR)/libopensmile_la-dataMemory.Plo
#	source='src/dataMemory.cpp' object='src/libopensmile_la-dataMemory.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dataMemory.lo `test -f 'src/dataMemory.cpp' || echo '$(srcdir)/'`src/dataMemory.cpp

src/libopensmile_la-buffer.lo: src/buffer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-buffer.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-buffer.Tpo -c -o src/libopensmile_la-buffer.lo `test -f 'src/buffer.cpp' || echo '$(srcdir)/'`src/buffer.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-buffer.Tpo src/$(DEPDIR)/libopensmile_la-buffer.Plo
#	source='src/buffer.cpp' object='src/libopensmile_la-buffer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-buffer.lo `test -f 'src/buffer.cpp' || echo '$(srcdir)/'`src/buffer.cpp

src/libopensmile_la-bowProducer.lo: src/bowProducer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-bowProducer.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-bowProducer.Tpo -c -o src/libopensmile_la-bowProducer.lo `test -f 'src/bowProducer.cpp' || echo '$(srcdir)/'`src/bowProducer.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-bowProducer.Tpo src/$(DEPDIR)/libopensmile_la-bowProducer.Plo
#	source='src/bowProducer.cpp' object='src/libopensmile_la-bowProducer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-bowProducer.lo `test -f 'src/bowProducer.cpp' || echo '$(srcdir)/'`src/bowProducer.cpp

src/libopensmile_la-signalGenerator.lo: src/signalGenerator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-signalGenerator.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-signalGenerator.Tpo -c -o src/libopensmile_la-signalGenerator.lo `test -f 'src/signalGenerator.cpp' || echo '$(srcdir)/'`src/signalGenerator.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-signalGenerator.Tpo src/$(DEPDIR)/libopensmile_la-signalGenerator.Plo
#	source='src/signalGenerator.cpp' object='src/libopensmile_la-signalGenerator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-signalGenerator.lo `test -f 'src/signalGenerator.cpp' || echo '$(srcdir)/'`src/signalGenerator.cpp

src/libopensmile_la-vecGlMean.lo: src/vecGlMean.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vecGlMean.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vecGlMean.Tpo -c -o src/libopensmile_la-vecGlMean.lo `test -f 'src/vecGlMean.cpp' || echo '$(srcdir)/'`src/vecGlMean.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vecGlMean.Tpo src/$(DEPDIR)/libopensmile_la-vecGlMean.Plo
#	source='src/vecGlMean.cpp' object='src/libopensmile_la-vecGlMean.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vecGlMean.lo `test -f 'src/vecGlMean.cpp' || echo '$(srcdir)/'`src/vecGlMean.cpp

src/libopensmile_la-fullinputMean.lo: src/fullinputMean.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-fullinputMean.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-fullinputMean.Tpo -c -o src/libopensmile_la-fullinputMean.lo `test -f 'src/fullinputMean.cpp' || echo '$(srcdir)/'`src/fullinputMean.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-fullinputMean.Tpo src/$(DEPDIR)/libopensmile_la-fullinputMean.Plo
#	source='src/fullinputMean.cpp' object='src/libopensmile_la-fullinputMean.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-fullinputMean.lo `test -f 'src/fullinputMean.cpp' || echo '$(srcdir)/'`src/fullinputMean.cpp

src/libopensmile_la-vectorMVStd.lo: src/vectorMVStd.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorMVStd.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorMVStd.Tpo -c -o src/libopensmile_la-vectorMVStd.lo `test -f 'src/vectorMVStd.cpp' || echo '$(srcdir)/'`src/vectorMVStd.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorMVStd.Tpo src/$(DEPDIR)/libopensmile_la-vectorMVStd.Plo
#	source='src/vectorMVStd.cpp' object='src/libopensmile_la-vectorMVStd.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorMVStd.lo `test -f 'src/vectorMVStd.cpp' || echo '$(srcdir)/'`src/vectorMVStd.cpp

src/libopensmile_la-vectorMVN.lo: src/vectorMVN.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorMVN.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorMVN.Tpo -c -o src/libopensmile_la-vectorMVN.lo `test -f 'src/vectorMVN.cpp' || echo '$(srcdir)/'`src/vectorMVN.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorMVN.Tpo src/$(DEPDIR)/libopensmile_la-vectorMVN.Plo
#	source='src/vectorMVN.cpp' object='src/libopensmile_la-vectorMVN.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorMVN.lo `test -f 'src/vectorMVN.cpp' || echo '$(srcdir)/'`src/vectorMVN.cpp

src/libopensmile_la-vectorHEQ.lo: src/vectorHEQ.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorHEQ.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorHEQ.Tpo -c -o src/libopensmile_la-vectorHEQ.lo `test -f 'src/vectorHEQ.cpp' || echo '$(srcdir)/'`src/vectorHEQ.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorHEQ.Tpo src/$(DEPDIR)/libopensmile_la-vectorHEQ.Plo
#	source='src/vectorHEQ.cpp' object='src/libopensmile_la-vectorHEQ.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorHEQ.lo `test -f 'src/vectorHEQ.cpp' || echo '$(srcdir)/'`src/vectorHEQ.cpp

src/libopensmile_la-vectorOperation.lo: src/vectorOperation.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorOperation.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorOperation.Tpo -c -o src/libopensmile_la-vectorOperation.lo `test -f 'src/vectorOperation.cpp' || echo '$(srcdir)/'`src/vectorOperation.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorOperation.Tpo src/$(DEPDIR)/libopensmile_la-vectorOperation.Plo
#	source='src/vectorOperation.cpp' object='src/libopensmile_la-vectorOperation.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorOperation.lo `test -f 'src/vectorOperation.cpp' || echo '$(srcdir)/'`src/vectorOperation.cpp

src/libopensmile_la-vectorTransform.lo: src/vectorTransform.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorTransform.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorTransform.Tpo -c -o src/libopensmile_la-vectorTransform.lo `test -f 'src/vectorTransform.cpp' || echo '$(srcdir)/'`src/vectorTransform.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorTransform.Tpo src/$(DEPDIR)/libopensmile_la-vectorTransform.Plo
#	source='src/vectorTransform.cpp' object='src/libopensmile_la-vectorTransform.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorTransform.lo `test -f 'src/vectorTransform.cpp' || echo '$(srcdir)/'`src/vectorTransform.cpp

src/libopensmile_la-turnDetector.lo: src/turnDetector.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-turnDetector.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-turnDetector.Tpo -c -o src/libopensmile_la-turnDetector.lo `test -f 'src/turnDetector.cpp' || echo '$(srcdir)/'`src/turnDetector.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-turnDetector.Tpo src/$(DEPDIR)/libopensmile_la-turnDetector.Plo
#	source='src/turnDetector.cpp' object='src/libopensmile_la-turnDetector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-turnDetector.lo `test -f 'src/turnDetector.cpp' || echo '$(srcdir)/'`src/turnDetector.cpp

src/libopensmile_la-valbasedSelector.lo: src/valbasedSelector.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-valbasedSelector.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-valbasedSelector.Tpo -c -o src/libopensmile_la-valbasedSelector.lo `test -f 'src/valbasedSelector.cpp' || echo '$(srcdir)/'`src/valbasedSelector.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-valbasedSelector.Tpo src/$(DEPDIR)/libopensmile_la-valbasedSelector.Plo
#	source='src/valbasedSelector.cpp' object='src/libopensmile_la-valbasedSelector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-valbasedSelector.lo `test -f 'src/valbasedSelector.cpp' || echo '$(srcdir)/'`src/valbasedSelector.cpp

src/libopensmile_la-vadV1.lo: src/vadV1.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vadV1.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vadV1.Tpo -c -o src/libopensmile_la-vadV1.lo `test -f 'src/vadV1.cpp' || echo '$(srcdir)/'`src/vadV1.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vadV1.Tpo src/$(DEPDIR)/libopensmile_la-vadV1.Plo
#	source='src/vadV1.cpp' object='src/libopensmile_la-vadV1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vadV1.lo `test -f 'src/vadV1.cpp' || echo '$(srcdir)/'`src/vadV1.cpp

src/libopensmile_la-speechLearn.lo: src/speechLearn.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-speechLearn.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-speechLearn.Tpo -c -o src/libopensmile_la-speechLearn.lo `test -f 'src/speechLearn.cpp' || echo '$(srcdir)/'`src/speechLearn.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-speechLearn.Tpo src/$(DEPDIR)/libopensmile_la-speechLearn.Plo
#	source='src/speechLearn.cpp' object='src/libopensmile_la-speechLearn.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-speechLearn.lo `test -f 'src/speechLearn.cpp' || echo '$(srcdir)/'`src/speechLearn.cpp

src/libopensmile_la-semaineSpeakerID1.lo: src/semaineSpeakerID1.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-semaineSpeakerID1.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-semaineSpeakerID1.Tpo -c -o src/libopensmile_la-semaineSpeakerID1.lo `test -f 'src/semaineSpeakerID1.cpp' || echo '$(srcdir)/'`src/semaineSpeakerID1.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-semaineSpeakerID1.Tpo src/$(DEPDIR)/libopensmile_la-semaineSpeakerID1.Plo
#	source='src/semaineSpeakerID1.cpp' object='src/libopensmile_la-semaineSpeakerID1.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-semaineSpeakerID1.lo `test -f 'src/semaineSpeakerID1.cpp' || echo '$(srcdir)/'`src/semaineSpeakerID1.cpp

src/libopensmile_la-componentManager.lo: src/componentManager.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-componentManager.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-componentManager.Tpo -c -o src/libopensmile_la-componentManager.lo `test -f 'src/componentManager.cpp' || echo '$(srcdir)/'`src/componentManager.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-componentManager.Tpo src/$(DEPDIR)/libopensmile_la-componentManager.Plo
#	source='src/componentManager.cpp' object='src/libopensmile_la-componentManager.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-componentManager.lo `test -f 'src/componentManager.cpp' || echo '$(srcdir)/'`src/componentManager.cpp

src/libopensmile_la-dataReader.lo: src/dataReader.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dataReader.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dataReader.Tpo -c -o src/libopensmile_la-dataReader.lo `test -f 'src/dataReader.cpp' || echo '$(srcdir)/'`src/dataReader.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dataReader.Tpo src/$(DEPDIR)/libopensmile_la-dataReader.Plo
#	source='src/dataReader.cpp' object='src/libopensmile_la-dataReader.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dataReader.lo `test -f 'src/dataReader.cpp' || echo '$(srcdir)/'`src/dataReader.cpp

src/libopensmile_la-dataWriter.lo: src/dataWriter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dataWriter.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dataWriter.Tpo -c -o src/libopensmile_la-dataWriter.lo `test -f 'src/dataWriter.cpp' || echo '$(srcdir)/'`src/dataWriter.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dataWriter.Tpo src/$(DEPDIR)/libopensmile_la-dataWriter.Plo
#	source='src/dataWriter.cpp' object='src/libopensmile_la-dataWriter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dataWriter.lo `test -f 'src/dataWriter.cpp' || echo '$(srcdir)/'`src/dataWriter.cpp

src/libopensmile_la-dataSource.lo: src/dataSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dataSource.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dataSource.Tpo -c -o src/libopensmile_la-dataSource.lo `test -f 'src/dataSource.cpp' || echo '$(srcdir)/'`src/dataSource.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dataSource.Tpo src/$(DEPDIR)/libopensmile_la-dataSource.Plo
#	source='src/dataSource.cpp' object='src/libopensmile_la-dataSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dataSource.lo `test -f 'src/dataSource.cpp' || echo '$(srcdir)/'`src/dataSource.cpp

src/libopensmile_la-dataSink.lo: src/dataSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dataSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dataSink.Tpo -c -o src/libopensmile_la-dataSink.lo `test -f 'src/dataSink.cpp' || echo '$(srcdir)/'`src/dataSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dataSink.Tpo src/$(DEPDIR)/libopensmile_la-dataSink.Plo
#	source='src/dataSink.cpp' object='src/libopensmile_la-dataSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dataSink.lo `test -f 'src/dataSink.cpp' || echo '$(srcdir)/'`src/dataSink.cpp

src/libopensmile_la-dataProcessor.lo: src/dataProcessor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dataProcessor.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dataProcessor.Tpo -c -o src/libopensmile_la-dataProcessor.lo `test -f 'src/dataProcessor.cpp' || echo '$(srcdir)/'`src/dataProcessor.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dataProcessor.Tpo src/$(DEPDIR)/libopensmile_la-dataProcessor.Plo
#	source='src/dataProcessor.cpp' object='src/libopensmile_la-dataProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dataProcessor.lo `test -f 'src/dataProcessor.cpp' || echo '$(srcdir)/'`src/dataProcessor.cpp

src/libopensmile_la-dataSelector.lo: src/dataSelector.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dataSelector.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dataSelector.Tpo -c -o src/libopensmile_la-dataSelector.lo `test -f 'src/dataSelector.cpp' || echo '$(srcdir)/'`src/dataSelector.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dataSelector.Tpo src/$(DEPDIR)/libopensmile_la-dataSelector.Plo
#	source='src/dataSelector.cpp' object='src/libopensmile_la-dataSelector.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dataSelector.lo `test -f 'src/dataSelector.cpp' || echo '$(srcdir)/'`src/dataSelector.cpp

src/libopensmile_la-vectorConcat.lo: src/vectorConcat.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorConcat.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorConcat.Tpo -c -o src/libopensmile_la-vectorConcat.lo `test -f 'src/vectorConcat.cpp' || echo '$(srcdir)/'`src/vectorConcat.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorConcat.Tpo src/$(DEPDIR)/libopensmile_la-vectorConcat.Plo
#	source='src/vectorConcat.cpp' object='src/libopensmile_la-vectorConcat.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorConcat.lo `test -f 'src/vectorConcat.cpp' || echo '$(srcdir)/'`src/vectorConcat.cpp

src/libopensmile_la-vectorProcessor.lo: src/vectorProcessor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorProcessor.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorProcessor.Tpo -c -o src/libopensmile_la-vectorProcessor.lo `test -f 'src/vectorProcessor.cpp' || echo '$(srcdir)/'`src/vectorProcessor.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorProcessor.Tpo src/$(DEPDIR)/libopensmile_la-vectorProcessor.Plo
#	source='src/vectorProcessor.cpp' object='src/libopensmile_la-vectorProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorProcessor.lo `test -f 'src/vectorProcessor.cpp' || echo '$(srcdir)/'`src/vectorProcessor.cpp

src/libopensmile_la-winToVecProcessor.lo: src/winToVecProcessor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-winToVecProcessor.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-winToVecProcessor.Tpo -c -o src/libopensmile_la-winToVecProcessor.lo `test -f 'src/winToVecProcessor.cpp' || echo '$(srcdir)/'`src/winToVecProcessor.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-winToVecProcessor.Tpo src/$(DEPDIR)/libopensmile_la-winToVecProcessor.Plo
#	source='src/winToVecProcessor.cpp' object='src/libopensmile_la-winToVecProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-winToVecProcessor.lo `test -f 'src/winToVecProcessor.cpp' || echo '$(srcdir)/'`src/winToVecProcessor.cpp

src/libopensmile_la-windowProcessor.lo: src/windowProcessor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-windowProcessor.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-windowProcessor.Tpo -c -o src/libopensmile_la-windowProcessor.lo `test -f 'src/windowProcessor.cpp' || echo '$(srcdir)/'`src/windowProcessor.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-windowProcessor.Tpo src/$(DEPDIR)/libopensmile_la-windowProcessor.Plo
#	source='src/windowProcessor.cpp' object='src/libopensmile_la-windowProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-windowProcessor.lo `test -f 'src/windowProcessor.cpp' || echo '$(srcdir)/'`src/windowProcessor.cpp

src/libopensmile_la-portaudioSource.lo: src/portaudioSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-portaudioSource.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-portaudioSource.Tpo -c -o src/libopensmile_la-portaudioSource.lo `test -f 'src/portaudioSource.cpp' || echo '$(srcdir)/'`src/portaudioSource.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-portaudioSource.Tpo src/$(DEPDIR)/libopensmile_la-portaudioSource.Plo
#	source='src/portaudioSource.cpp' object='src/libopensmile_la-portaudioSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-portaudioSource.lo `test -f 'src/portaudioSource.cpp' || echo '$(srcdir)/'`src/portaudioSource.cpp

src/libopensmile_la-portaudioSink.lo: src/portaudioSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-portaudioSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-portaudioSink.Tpo -c -o src/libopensmile_la-portaudioSink.lo `test -f 'src/portaudioSink.cpp' || echo '$(srcdir)/'`src/portaudioSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-portaudioSink.Tpo src/$(DEPDIR)/libopensmile_la-portaudioSink.Plo
#	source='src/portaudioSink.cpp' object='src/libopensmile_la-portaudioSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-portaudioSink.lo `test -f 'src/portaudioSink.cpp' || echo '$(srcdir)/'`src/portaudioSink.cpp

src/libopensmile_la-portaudioDuplex.lo: src/portaudioDuplex.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-portaudioDuplex.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-portaudioDuplex.Tpo -c -o src/libopensmile_la-portaudioDuplex.lo `test -f 'src/portaudioDuplex.cpp' || echo '$(srcdir)/'`src/portaudioDuplex.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-portaudioDuplex.Tpo src/$(DEPDIR)/libopensmile_la-portaudioDuplex.Plo
#	source='src/portaudioDuplex.cpp' object='src/libopensmile_la-portaudioDuplex.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-portaudioDuplex.lo `test -f 'src/portaudioDuplex.cpp' || echo '$(srcdir)/'`src/portaudioDuplex.cpp

src/libopensmile_la-portaudioDuplexS.lo: src/portaudioDuplexS.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-portaudioDuplexS.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-portaudioDuplexS.Tpo -c -o src/libopensmile_la-portaudioDuplexS.lo `test -f 'src/portaudioDuplexS.cpp' || echo '$(srcdir)/'`src/portaudioDuplexS.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-portaudioDuplexS.Tpo src/$(DEPDIR)/libopensmile_la-portaudioDuplexS.Plo
#	source='src/portaudioDuplexS.cpp' object='src/libopensmile_la-portaudioDuplexS.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-portaudioDuplexS.lo `test -f 'src/portaudioDuplexS.cpp' || echo '$(srcdir)/'`src/portaudioDuplexS.cpp

src/libopensmile_la-portaudioDuplexD.lo: src/portaudioDuplexD.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-portaudioDuplexD.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-portaudioDuplexD.Tpo -c -o src/libopensmile_la-portaudioDuplexD.lo `test -f 'src/portaudioDuplexD.cpp' || echo '$(srcdir)/'`src/portaudioDuplexD.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-portaudioDuplexD.Tpo src/$(DEPDIR)/libopensmile_la-portaudioDuplexD.Plo
#	source='src/portaudioDuplexD.cpp' object='src/libopensmile_la-portaudioDuplexD.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-portaudioDuplexD.lo `test -f 'src/portaudioDuplexD.cpp' || echo '$(srcdir)/'`src/portaudioDuplexD.cpp

src/libopensmile_la-preemphasis.lo: src/preemphasis.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-preemphasis.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-preemphasis.Tpo -c -o src/libopensmile_la-preemphasis.lo `test -f 'src/preemphasis.cpp' || echo '$(srcdir)/'`src/preemphasis.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-preemphasis.Tpo src/$(DEPDIR)/libopensmile_la-preemphasis.Plo
#	source='src/preemphasis.cpp' object='src/libopensmile_la-preemphasis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-preemphasis.lo `test -f 'src/preemphasis.cpp' || echo '$(srcdir)/'`src/preemphasis.cpp

src/libopensmile_la-exampleSource.lo: src/exampleSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-exampleSource.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-exampleSource.Tpo -c -o src/libopensmile_la-exampleSource.lo `test -f 'src/exampleSource.cpp' || echo '$(srcdir)/'`src/exampleSource.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-exampleSource.Tpo src/$(DEPDIR)/libopensmile_la-exampleSource.Plo
#	source='src/exampleSource.cpp' object='src/libopensmile_la-exampleSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-exampleSource.lo `test -f 'src/exampleSource.cpp' || echo '$(srcdir)/'`src/exampleSource.cpp

src/libopensmile_la-exampleSink.lo: src/exampleSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-exampleSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-exampleSink.Tpo -c -o src/libopensmile_la-exampleSink.lo `test -f 'src/exampleSink.cpp' || echo '$(srcdir)/'`src/exampleSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-exampleSink.Tpo src/$(DEPDIR)/libopensmile_la-exampleSink.Plo
#	source='src/exampleSink.cpp' object='src/libopensmile_la-exampleSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-exampleSink.lo `test -f 'src/exampleSink.cpp' || echo '$(srcdir)/'`src/exampleSink.cpp

src/libopensmile_la-arffSink.lo: src/arffSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-arffSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-arffSink.Tpo -c -o src/libopensmile_la-arffSink.lo `test -f 'src/arffSink.cpp' || echo '$(srcdir)/'`src/arffSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-arffSink.Tpo src/$(DEPDIR)/libopensmile_la-arffSink.Plo
#	source='src/arffSink.cpp' object='src/libopensmile_la-arffSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-arffSink.lo `test -f 'src/arffSink.cpp' || echo '$(srcdir)/'`src/arffSink.cpp

src/libopensmile_la-libsvmSink.lo: src/libsvmSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-libsvmSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-libsvmSink.Tpo -c -o src/libopensmile_la-libsvmSink.lo `test -f 'src/libsvmSink.cpp' || echo '$(srcdir)/'`src/libsvmSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-libsvmSink.Tpo src/$(DEPDIR)/libopensmile_la-libsvmSink.Plo
#	source='src/libsvmSink.cpp' object='src/libopensmile_la-libsvmSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-libsvmSink.lo `test -f 'src/libsvmSink.cpp' || echo '$(srcdir)/'`src/libsvmSink.cpp

src/libopensmile_la-libsvmliveSink.lo: src/libsvmliveSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-libsvmliveSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-libsvmliveSink.Tpo -c -o src/libopensmile_la-libsvmliveSink.lo `test -f 'src/libsvmliveSink.cpp' || echo '$(srcdir)/'`src/libsvmliveSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-libsvmliveSink.Tpo src/$(DEPDIR)/libopensmile_la-libsvmliveSink.Plo
#	source='src/libsvmliveSink.cpp' object='src/libopensmile_la-libsvmliveSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-libsvmliveSink.lo `test -f 'src/libsvmliveSink.cpp' || echo '$(srcdir)/'`src/libsvmliveSink.cpp

src/libopensmile_la-csvSink.lo: src/csvSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-csvSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-csvSink.Tpo -c -o src/libopensmile_la-csvSink.lo `test -f 'src/csvSink.cpp' || echo '$(srcdir)/'`src/csvSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-csvSink.Tpo src/$(DEPDIR)/libopensmile_la-csvSink.Plo
#	source='src/csvSink.cpp' object='src/libopensmile_la-csvSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-csvSink.lo `test -f 'src/csvSink.cpp' || echo '$(srcdir)/'`src/csvSink.cpp

src/libopensmile_la-csvSource.lo: src/csvSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-csvSource.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-csvSource.Tpo -c -o src/libopensmile_la-csvSource.lo `test -f 'src/csvSource.cpp' || echo '$(srcdir)/'`src/csvSource.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-csvSource.Tpo src/$(DEPDIR)/libopensmile_la-csvSource.Plo
#	source='src/csvSource.cpp' object='src/libopensmile_la-csvSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-csvSource.lo `test -f 'src/csvSource.cpp' || echo '$(srcdir)/'`src/csvSource.cpp

src/libopensmile_la-arffSource.lo: src/arffSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-arffSource.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-arffSource.Tpo -c -o src/libopensmile_la-arffSource.lo `test -f 'src/arffSource.cpp' || echo '$(srcdir)/'`src/arffSource.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-arffSource.Tpo src/$(DEPDIR)/libopensmile_la-arffSource.Plo
#	source='src/arffSource.cpp' object='src/libopensmile_la-arffSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-arffSource.lo `test -f 'src/arffSource.cpp' || echo '$(srcdir)/'`src/arffSource.cpp

src/libopensmile_la-htkSink.lo: src/htkSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-htkSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-htkSink.Tpo -c -o src/libopensmile_la-htkSink.lo `test -f 'src/htkSink.cpp' || echo '$(srcdir)/'`src/htkSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-htkSink.Tpo src/$(DEPDIR)/libopensmile_la-htkSink.Plo
#	source='src/htkSink.cpp' object='src/libopensmile_la-htkSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-htkSink.lo `test -f 'src/htkSink.cpp' || echo '$(srcdir)/'`src/htkSink.cpp

src/libopensmile_la-htkSource.lo: src/htkSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-htkSource.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-htkSource.Tpo -c -o src/libopensmile_la-htkSource.lo `test -f 'src/htkSource.cpp' || echo '$(srcdir)/'`src/htkSource.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-htkSource.Tpo src/$(DEPDIR)/libopensmile_la-htkSource.Plo
#	source='src/htkSource.cpp' object='src/libopensmile_la-htkSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-htkSource.lo `test -f 'src/htkSource.cpp' || echo '$(srcdir)/'`src/htkSource.cpp

src/libopensmile_la-datadumpSink.lo: src/datadumpSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-datadumpSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-datadumpSink.Tpo -c -o src/libopensmile_la-datadumpSink.lo `test -f 'src/datadumpSink.cpp' || echo '$(srcdir)/'`src/datadumpSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-datadumpSink.Tpo src/$(DEPDIR)/libopensmile_la-datadumpSink.Plo
#	source='src/datadumpSink.cpp' object='src/libopensmile_la-datadumpSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-datadumpSink.lo `test -f 'src/datadumpSink.cpp' || echo '$(srcdir)/'`src/datadumpSink.cpp

src/libopensmile_la-nullSink.lo: src/nullSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-nullSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-nullSink.Tpo -c -o src/libopensmile_la-nullSink.lo `test -f 'src/nullSink.cpp' || echo '$(srcdir)/'`src/nullSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-nullSink.Tpo src/$(DEPDIR)/libopensmile_la-nullSink.Plo
#	source='src/nullSink.cpp' object='src/libopensmile_la-nullSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-nullSink.lo `test -f 'src/nullSink.cpp' || echo '$(srcdir)/'`src/nullSink.cpp

src/libopensmile_la-exampleProcessor.lo: src/exampleProcessor.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-exampleProcessor.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-exampleProcessor.Tpo -c -o src/libopensmile_la-exampleProcessor.lo `test -f 'src/exampleProcessor.cpp' || echo '$(srcdir)/'`src/exampleProcessor.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-exampleProcessor.Tpo src/$(DEPDIR)/libopensmile_la-exampleProcessor.Plo
#	source='src/exampleProcessor.cpp' object='src/libopensmile_la-exampleProcessor.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-exampleProcessor.lo `test -f 'src/exampleProcessor.cpp' || echo '$(srcdir)/'`src/exampleProcessor.cpp

src/libopensmile_la-vectorPreemphasis.lo: src/vectorPreemphasis.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-vectorPreemphasis.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Tpo -c -o src/libopensmile_la-vectorPreemphasis.lo `test -f 'src/vectorPreemphasis.cpp' || echo '$(srcdir)/'`src/vectorPreemphasis.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Tpo src/$(DEPDIR)/libopensmile_la-vectorPreemphasis.Plo
#	source='src/vectorPreemphasis.cpp' object='src/libopensmile_la-vectorPreemphasis.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-vectorPreemphasis.lo `test -f 'src/vectorPreemphasis.cpp' || echo '$(srcdir)/'`src/vectorPreemphasis.cpp

src/libopensmile_la-deltaRegression.lo: src/deltaRegression.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-deltaRegression.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-deltaRegression.Tpo -c -o src/libopensmile_la-deltaRegression.lo `test -f 'src/deltaRegression.cpp' || echo '$(srcdir)/'`src/deltaRegression.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-deltaRegression.Tpo src/$(DEPDIR)/libopensmile_la-deltaRegression.Plo
#	source='src/deltaRegression.cpp' object='src/libopensmile_la-deltaRegression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-deltaRegression.lo `test -f 'src/deltaRegression.cpp' || echo '$(srcdir)/'`src/deltaRegression.cpp

src/libopensmile_la-weightedDiff.lo: src/weightedDiff.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-weightedDiff.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-weightedDiff.Tpo -c -o src/libopensmile_la-weightedDiff.lo `test -f 'src/weightedDiff.cpp' || echo '$(srcdir)/'`src/weightedDiff.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-weightedDiff.Tpo src/$(DEPDIR)/libopensmile_la-weightedDiff.Plo
#	source='src/weightedDiff.cpp' object='src/libopensmile_la-weightedDiff.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-weightedDiff.lo `test -f 'src/weightedDiff.cpp' || echo '$(srcdir)/'`src/weightedDiff.cpp

src/libopensmile_la-contourSmoother.lo: src/contourSmoother.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-contourSmoother.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-contourSmoother.Tpo -c -o src/libopensmile_la-contourSmoother.lo `test -f 'src/contourSmoother.cpp' || echo '$(srcdir)/'`src/contourSmoother.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-contourSmoother.Tpo src/$(DEPDIR)/libopensmile_la-contourSmoother.Plo
#	source='src/contourSmoother.cpp' object='src/libopensmile_la-contourSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-contourSmoother.lo `test -f 'src/contourSmoother.cpp' || echo '$(srcdir)/'`src/contourSmoother.cpp

src/libopensmile_la-multipleWaveSources.lo: src/multipleWaveSources.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-multipleWaveSources.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-multipleWaveSources.Tpo -c -o src/libopensmile_la-multipleWaveSources.lo `test -f 'src/multipleWaveSources.cpp' || echo '$(srcdir)/'`src/multipleWaveSources.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-multipleWaveSources.Tpo src/$(DEPDIR)/libopensmile_la-multipleWaveSources.Plo
#	source='src/multipleWaveSources.cpp' object='src/libopensmile_la-multipleWaveSources.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-multipleWaveSources.lo `test -f 'src/multipleWaveSources.cpp' || echo '$(srcdir)/'`src/multipleWaveSources.cpp

src/libopensmile_la-waveSource.lo: src/waveSource.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-waveSource.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-waveSource.Tpo -c -o src/libopensmile_la-waveSource.lo `test -f 'src/waveSource.cpp' || echo '$(srcdir)/'`src/waveSource.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-waveSource.Tpo src/$(DEPDIR)/libopensmile_la-waveSource.Plo
#	source='src/waveSource.cpp' object='src/libopensmile_la-waveSource.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-waveSource.lo `test -f 'src/waveSource.cpp' || echo '$(srcdir)/'`src/waveSource.cpp

src/libopensmile_la-framer.lo: src/framer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-framer.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-framer.Tpo -c -o src/libopensmile_la-framer.lo `test -f 'src/framer.cpp' || echo '$(srcdir)/'`src/framer.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-framer.Tpo src/$(DEPDIR)/libopensmile_la-framer.Plo
#	source='src/framer.cpp' object='src/libopensmile_la-framer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-framer.lo `test -f 'src/framer.cpp' || echo '$(srcdir)/'`src/framer.cpp

src/libopensmile_la-windower.lo: src/windower.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-windower.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-windower.Tpo -c -o src/libopensmile_la-windower.lo `test -f 'src/windower.cpp' || echo '$(srcdir)/'`src/windower.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-windower.Tpo src/$(DEPDIR)/libopensmile_la-windower.Plo
#	source='src/windower.cpp' object='src/libopensmile_la-windower.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-windower.lo `test -f 'src/windower.cpp' || echo '$(srcdir)/'`src/windower.cpp

src/libopensmile_la-spectral.lo: src/spectral.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-spectral.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-spectral.Tpo -c -o src/libopensmile_la-spectral.lo `test -f 'src/spectral.cpp' || echo '$(srcdir)/'`src/spectral.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-spectral.Tpo src/$(DEPDIR)/libopensmile_la-spectral.Plo
#	source='src/spectral.cpp' object='src/libopensmile_la-spectral.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-spectral.lo `test -f 'src/spectral.cpp' || echo '$(srcdir)/'`src/spectral.cpp

src/libopensmile_la-functionals.lo: src/functionals.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionals.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionals.Tpo -c -o src/libopensmile_la-functionals.lo `test -f 'src/functionals.cpp' || echo '$(srcdir)/'`src/functionals.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionals.Tpo src/$(DEPDIR)/libopensmile_la-functionals.Plo
#	source='src/functionals.cpp' object='src/libopensmile_la-functionals.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionals.lo `test -f 'src/functionals.cpp' || echo '$(srcdir)/'`src/functionals.cpp

src/libopensmile_la-functionalsVecToVec.lo: src/functionalsVecToVec.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalsVecToVec.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalsVecToVec.Tpo -c -o src/libopensmile_la-functionalsVecToVec.lo `test -f 'src/functionalsVecToVec.cpp' || echo '$(srcdir)/'`src/functionalsVecToVec.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalsVecToVec.Tpo src/$(DEPDIR)/libopensmile_la-functionalsVecToVec.Plo
#	source='src/functionalsVecToVec.cpp' object='src/libopensmile_la-functionalsVecToVec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalsVecToVec.lo `test -f 'src/functionalsVecToVec.cpp' || echo '$(srcdir)/'`src/functionalsVecToVec.cpp

src/libopensmile_la-functionalComponent.lo: src/functionalComponent.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalComponent.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalComponent.Tpo -c -o src/libopensmile_la-functionalComponent.lo `test -f 'src/functionalComponent.cpp' || echo '$(srcdir)/'`src/functionalComponent.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalComponent.Tpo src/$(DEPDIR)/libopensmile_la-functionalComponent.Plo
#	source='src/functionalComponent.cpp' object='src/libopensmile_la-functionalComponent.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalComponent.lo `test -f 'src/functionalComponent.cpp' || echo '$(srcdir)/'`src/functionalComponent.cpp

src/libopensmile_la-functionalExtremes.lo: src/functionalExtremes.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalExtremes.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalExtremes.Tpo -c -o src/libopensmile_la-functionalExtremes.lo `test -f 'src/functionalExtremes.cpp' || echo '$(srcdir)/'`src/functionalExtremes.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalExtremes.Tpo src/$(DEPDIR)/libopensmile_la-functionalExtremes.Plo
#	source='src/functionalExtremes.cpp' object='src/libopensmile_la-functionalExtremes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalExtremes.lo `test -f 'src/functionalExtremes.cpp' || echo '$(srcdir)/'`src/functionalExtremes.cpp

src/libopensmile_la-functionalMeans.lo: src/functionalMeans.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalMeans.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalMeans.Tpo -c -o src/libopensmile_la-functionalMeans.lo `test -f 'src/functionalMeans.cpp' || echo '$(srcdir)/'`src/functionalMeans.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalMeans.Tpo src/$(DEPDIR)/libopensmile_la-functionalMeans.Plo
#	source='src/functionalMeans.cpp' object='src/libopensmile_la-functionalMeans.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalMeans.lo `test -f 'src/functionalMeans.cpp' || echo '$(srcdir)/'`src/functionalMeans.cpp

src/libopensmile_la-functionalPeaks.lo: src/functionalPeaks.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalPeaks.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalPeaks.Tpo -c -o src/libopensmile_la-functionalPeaks.lo `test -f 'src/functionalPeaks.cpp' || echo '$(srcdir)/'`src/functionalPeaks.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalPeaks.Tpo src/$(DEPDIR)/libopensmile_la-functionalPeaks.Plo
#	source='src/functionalPeaks.cpp' object='src/libopensmile_la-functionalPeaks.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalPeaks.lo `test -f 'src/functionalPeaks.cpp' || echo '$(srcdir)/'`src/functionalPeaks.cpp

src/libopensmile_la-functionalSegments.lo: src/functionalSegments.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalSegments.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalSegments.Tpo -c -o src/libopensmile_la-functionalSegments.lo `test -f 'src/functionalSegments.cpp' || echo '$(srcdir)/'`src/functionalSegments.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalSegments.Tpo src/$(DEPDIR)/libopensmile_la-functionalSegments.Plo
#	source='src/functionalSegments.cpp' object='src/libopensmile_la-functionalSegments.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalSegments.lo `test -f 'src/functionalSegments.cpp' || echo '$(srcdir)/'`src/functionalSegments.cpp

src/libopensmile_la-functionalOnset.lo: src/functionalOnset.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalOnset.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalOnset.Tpo -c -o src/libopensmile_la-functionalOnset.lo `test -f 'src/functionalOnset.cpp' || echo '$(srcdir)/'`src/functionalOnset.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalOnset.Tpo src/$(DEPDIR)/libopensmile_la-functionalOnset.Plo
#	source='src/functionalOnset.cpp' object='src/libopensmile_la-functionalOnset.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalOnset.lo `test -f 'src/functionalOnset.cpp' || echo '$(srcdir)/'`src/functionalOnset.cpp

src/libopensmile_la-functionalSamples.lo: src/functionalSamples.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalSamples.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalSamples.Tpo -c -o src/libopensmile_la-functionalSamples.lo `test -f 'src/functionalSamples.cpp' || echo '$(srcdir)/'`src/functionalSamples.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalSamples.Tpo src/$(DEPDIR)/libopensmile_la-functionalSamples.Plo
#	source='src/functionalSamples.cpp' object='src/libopensmile_la-functionalSamples.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalSamples.lo `test -f 'src/functionalSamples.cpp' || echo '$(srcdir)/'`src/functionalSamples.cpp

src/libopensmile_la-functionalMoments.lo: src/functionalMoments.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalMoments.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalMoments.Tpo -c -o src/libopensmile_la-functionalMoments.lo `test -f 'src/functionalMoments.cpp' || echo '$(srcdir)/'`src/functionalMoments.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalMoments.Tpo src/$(DEPDIR)/libopensmile_la-functionalMoments.Plo
#	source='src/functionalMoments.cpp' object='src/libopensmile_la-functionalMoments.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalMoments.lo `test -f 'src/functionalMoments.cpp' || echo '$(srcdir)/'`src/functionalMoments.cpp

src/libopensmile_la-functionalCrossings.lo: src/functionalCrossings.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalCrossings.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalCrossings.Tpo -c -o src/libopensmile_la-functionalCrossings.lo `test -f 'src/functionalCrossings.cpp' || echo '$(srcdir)/'`src/functionalCrossings.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalCrossings.Tpo src/$(DEPDIR)/libopensmile_la-functionalCrossings.Plo
#	source='src/functionalCrossings.cpp' object='src/libopensmile_la-functionalCrossings.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalCrossings.lo `test -f 'src/functionalCrossings.cpp' || echo '$(srcdir)/'`src/functionalCrossings.cpp

src/libopensmile_la-functionalPercentiles.lo: src/functionalPercentiles.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalPercentiles.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalPercentiles.Tpo -c -o src/libopensmile_la-functionalPercentiles.lo `test -f 'src/functionalPercentiles.cpp' || echo '$(srcdir)/'`src/functionalPercentiles.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalPercentiles.Tpo src/$(DEPDIR)/libopensmile_la-functionalPercentiles.Plo
#	source='src/functionalPercentiles.cpp' object='src/libopensmile_la-functionalPercentiles.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalPercentiles.lo `test -f 'src/functionalPercentiles.cpp' || echo '$(srcdir)/'`src/functionalPercentiles.cpp

src/libopensmile_la-functionalRegression.lo: src/functionalRegression.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalRegression.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalRegression.Tpo -c -o src/libopensmile_la-functionalRegression.lo `test -f 'src/functionalRegression.cpp' || echo '$(srcdir)/'`src/functionalRegression.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalRegression.Tpo src/$(DEPDIR)/libopensmile_la-functionalRegression.Plo
#	source='src/functionalRegression.cpp' object='src/libopensmile_la-functionalRegression.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalRegression.lo `test -f 'src/functionalRegression.cpp' || echo '$(srcdir)/'`src/functionalRegression.cpp

src/libopensmile_la-functionalTimes.lo: src/functionalTimes.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalTimes.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalTimes.Tpo -c -o src/libopensmile_la-functionalTimes.lo `test -f 'src/functionalTimes.cpp' || echo '$(srcdir)/'`src/functionalTimes.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalTimes.Tpo src/$(DEPDIR)/libopensmile_la-functionalTimes.Plo
#	source='src/functionalTimes.cpp' object='src/libopensmile_la-functionalTimes.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalTimes.lo `test -f 'src/functionalTimes.cpp' || echo '$(srcdir)/'`src/functionalTimes.cpp

src/libopensmile_la-functionalDCT.lo: src/functionalDCT.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-functionalDCT.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-functionalDCT.Tpo -c -o src/libopensmile_la-functionalDCT.lo `test -f 'src/functionalDCT.cpp' || echo '$(srcdir)/'`src/functionalDCT.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-functionalDCT.Tpo src/$(DEPDIR)/libopensmile_la-functionalDCT.Plo
#	source='src/functionalDCT.cpp' object='src/libopensmile_la-functionalDCT.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-functionalDCT.lo `test -f 'src/functionalDCT.cpp' || echo '$(srcdir)/'`src/functionalDCT.cpp

src/libopensmile_la-energy.lo: src/energy.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-energy.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-energy.Tpo -c -o src/libopensmile_la-energy.lo `test -f 'src/energy.cpp' || echo '$(srcdir)/'`src/energy.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-energy.Tpo src/$(DEPDIR)/libopensmile_la-energy.Plo
#	source='src/energy.cpp' object='src/libopensmile_la-energy.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-energy.lo `test -f 'src/energy.cpp' || echo '$(srcdir)/'`src/energy.cpp

src/libopensmile_la-intensity.lo: src/intensity.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-intensity.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-intensity.Tpo -c -o src/libopensmile_la-intensity.lo `test -f 'src/intensity.cpp' || echo '$(srcdir)/'`src/intensity.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-intensity.Tpo src/$(DEPDIR)/libopensmile_la-intensity.Plo
#	source='src/intensity.cpp' object='src/libopensmile_la-intensity.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-intensity.lo `test -f 'src/intensity.cpp' || echo '$(srcdir)/'`src/intensity.cpp

src/libopensmile_la-dbA.lo: src/dbA.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-dbA.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-dbA.Tpo -c -o src/libopensmile_la-dbA.lo `test -f 'src/dbA.cpp' || echo '$(srcdir)/'`src/dbA.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-dbA.Tpo src/$(DEPDIR)/libopensmile_la-dbA.Plo
#	source='src/dbA.cpp' object='src/libopensmile_la-dbA.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-dbA.lo `test -f 'src/dbA.cpp' || echo '$(srcdir)/'`src/dbA.cpp

src/libopensmile_la-amdf.lo: src/amdf.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-amdf.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-amdf.Tpo -c -o src/libopensmile_la-amdf.lo `test -f 'src/amdf.cpp' || echo '$(srcdir)/'`src/amdf.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-amdf.Tpo src/$(DEPDIR)/libopensmile_la-amdf.Plo
#	source='src/amdf.cpp' object='src/libopensmile_la-amdf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-amdf.lo `test -f 'src/amdf.cpp' || echo '$(srcdir)/'`src/amdf.cpp

src/libopensmile_la-acf.lo: src/acf.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-acf.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-acf.Tpo -c -o src/libopensmile_la-acf.lo `test -f 'src/acf.cpp' || echo '$(srcdir)/'`src/acf.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-acf.Tpo src/$(DEPDIR)/libopensmile_la-acf.Plo
#	source='src/acf.cpp' object='src/libopensmile_la-acf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-acf.lo `test -f 'src/acf.cpp' || echo '$(srcdir)/'`src/acf.cpp

src/libopensmile_la-tonespec.lo: src/tonespec.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-tonespec.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-tonespec.Tpo -c -o src/libopensmile_la-tonespec.lo `test -f 'src/tonespec.cpp' || echo '$(srcdir)/'`src/tonespec.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-tonespec.Tpo src/$(DEPDIR)/libopensmile_la-tonespec.Plo
#	source='src/tonespec.cpp' object='src/libopensmile_la-tonespec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-tonespec.lo `test -f 'src/tonespec.cpp' || echo '$(srcdir)/'`src/tonespec.cpp

src/libopensmile_la-tonefilt.lo: src/tonefilt.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-tonefilt.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-tonefilt.Tpo -c -o src/libopensmile_la-tonefilt.lo `test -f 'src/tonefilt.cpp' || echo '$(srcdir)/'`src/tonefilt.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-tonefilt.Tpo src/$(DEPDIR)/libopensmile_la-tonefilt.Plo
#	source='src/tonefilt.cpp' object='src/libopensmile_la-tonefilt.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-tonefilt.lo `test -f 'src/tonefilt.cpp' || echo '$(srcdir)/'`src/tonefilt.cpp

src/libopensmile_la-transformFft.lo: src/transformFft.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-transformFft.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-transformFft.Tpo -c -o src/libopensmile_la-transformFft.lo `test -f 'src/transformFft.cpp' || echo '$(srcdir)/'`src/transformFft.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-transformFft.Tpo src/$(DEPDIR)/libopensmile_la-transformFft.Plo
#	source='src/transformFft.cpp' object='src/libopensmile_la-transformFft.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-transformFft.lo `test -f 'src/transformFft.cpp' || echo '$(srcdir)/'`src/transformFft.cpp

src/libopensmile_la-fftmagphase.lo: src/fftmagphase.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-fftmagphase.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-fftmagphase.Tpo -c -o src/libopensmile_la-fftmagphase.lo `test -f 'src/fftmagphase.cpp' || echo '$(srcdir)/'`src/fftmagphase.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-fftmagphase.Tpo src/$(DEPDIR)/libopensmile_la-fftmagphase.Plo
#	source='src/fftmagphase.cpp' object='src/libopensmile_la-fftmagphase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-fftmagphase.lo `test -f 'src/fftmagphase.cpp' || echo '$(srcdir)/'`src/fftmagphase.cpp

src/libopensmile_la-specScale.lo: src/specScale.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-specScale.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-specScale.Tpo -c -o src/libopensmile_la-specScale.lo `test -f 'src/specScale.cpp' || echo '$(srcdir)/'`src/specScale.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-specScale.Tpo src/$(DEPDIR)/libopensmile_la-specScale.Plo
#	source='src/specScale.cpp' object='src/libopensmile_la-specScale.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-specScale.lo `test -f 'src/specScale.cpp' || echo '$(srcdir)/'`src/specScale.cpp

src/libopensmile_la-specResample.lo: src/specResample.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-specResample.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-specResample.Tpo -c -o src/libopensmile_la-specResample.lo `test -f 'src/specResample.cpp' || echo '$(srcdir)/'`src/specResample.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-specResample.Tpo src/$(DEPDIR)/libopensmile_la-specResample.Plo
#	source='src/specResample.cpp' object='src/libopensmile_la-specResample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-specResample.lo `test -f 'src/specResample.cpp' || echo '$(srcdir)/'`src/specResample.cpp

src/libopensmile_la-melspec.lo: src/melspec.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-melspec.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-melspec.Tpo -c -o src/libopensmile_la-melspec.lo `test -f 'src/melspec.cpp' || echo '$(srcdir)/'`src/melspec.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-melspec.Tpo src/$(DEPDIR)/libopensmile_la-melspec.Plo
#	source='src/melspec.cpp' object='src/libopensmile_la-melspec.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-melspec.lo `test -f 'src/melspec.cpp' || echo '$(srcdir)/'`src/melspec.cpp

src/libopensmile_la-chroma.lo: src/chroma.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-chroma.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-chroma.Tpo -c -o src/libopensmile_la-chroma.lo `test -f 'src/chroma.cpp' || echo '$(srcdir)/'`src/chroma.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-chroma.Tpo src/$(DEPDIR)/libopensmile_la-chroma.Plo
#	source='src/chroma.cpp' object='src/libopensmile_la-chroma.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-chroma.lo `test -f 'src/chroma.cpp' || echo '$(srcdir)/'`src/chroma.cpp

src/libopensmile_la-cens.lo: src/cens.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-cens.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-cens.Tpo -c -o src/libopensmile_la-cens.lo `test -f 'src/cens.cpp' || echo '$(srcdir)/'`src/cens.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-cens.Tpo src/$(DEPDIR)/libopensmile_la-cens.Plo
#	source='src/cens.cpp' object='src/libopensmile_la-cens.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-cens.lo `test -f 'src/cens.cpp' || echo '$(srcdir)/'`src/cens.cpp

src/libopensmile_la-chromaFeatures.lo: src/chromaFeatures.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-chromaFeatures.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-chromaFeatures.Tpo -c -o src/libopensmile_la-chromaFeatures.lo `test -f 'src/chromaFeatures.cpp' || echo '$(srcdir)/'`src/chromaFeatures.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-chromaFeatures.Tpo src/$(DEPDIR)/libopensmile_la-chromaFeatures.Plo
#	source='src/chromaFeatures.cpp' object='src/libopensmile_la-chromaFeatures.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-chromaFeatures.lo `test -f 'src/chromaFeatures.cpp' || echo '$(srcdir)/'`src/chromaFeatures.cpp

src/libopensmile_la-mfcc.lo: src/mfcc.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-mfcc.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-mfcc.Tpo -c -o src/libopensmile_la-mfcc.lo `test -f 'src/mfcc.cpp' || echo '$(srcdir)/'`src/mfcc.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-mfcc.Tpo src/$(DEPDIR)/libopensmile_la-mfcc.Plo
#	source='src/mfcc.cpp' object='src/libopensmile_la-mfcc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-mfcc.lo `test -f 'src/mfcc.cpp' || echo '$(srcdir)/'`src/mfcc.cpp

src/libopensmile_la-plp.lo: src/plp.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-plp.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-plp.Tpo -c -o src/libopensmile_la-plp.lo `test -f 'src/plp.cpp' || echo '$(srcdir)/'`src/plp.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-plp.Tpo src/$(DEPDIR)/libopensmile_la-plp.Plo
#	source='src/plp.cpp' object='src/libopensmile_la-plp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-plp.lo `test -f 'src/plp.cpp' || echo '$(srcdir)/'`src/plp.cpp

src/libopensmile_la-tumkwsaSink.lo: src/tumkwsaSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-tumkwsaSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-tumkwsaSink.Tpo -c -o src/libopensmile_la-tumkwsaSink.lo `test -f 'src/tumkwsaSink.cpp' || echo '$(srcdir)/'`src/tumkwsaSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-tumkwsaSink.Tpo src/$(DEPDIR)/libopensmile_la-tumkwsaSink.Plo
#	source='src/tumkwsaSink.cpp' object='src/libopensmile_la-tumkwsaSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-tumkwsaSink.lo `test -f 'src/tumkwsaSink.cpp' || echo '$(srcdir)/'`src/tumkwsaSink.cpp

src/libopensmile_la-tumkwsjSink.lo: src/tumkwsjSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-tumkwsjSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-tumkwsjSink.Tpo -c -o src/libopensmile_la-tumkwsjSink.lo `test -f 'src/tumkwsjSink.cpp' || echo '$(srcdir)/'`src/tumkwsjSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-tumkwsjSink.Tpo src/$(DEPDIR)/libopensmile_la-tumkwsjSink.Plo
#	source='src/tumkwsjSink.cpp' object='src/libopensmile_la-tumkwsjSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-tumkwsjSink.lo `test -f 'src/tumkwsjSink.cpp' || echo '$(srcdir)/'`src/tumkwsjSink.cpp

src/libopensmile_la-volanalyse.lo: src/volanalyse.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-volanalyse.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-volanalyse.Tpo -c -o src/libopensmile_la-volanalyse.lo `test -f 'src/volanalyse.cpp' || echo '$(srcdir)/'`src/volanalyse.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-volanalyse.Tpo src/$(DEPDIR)/libopensmile_la-volanalyse.Plo
#	source='src/volanalyse.cpp' object='src/libopensmile_la-volanalyse.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-volanalyse.lo `test -f 'src/volanalyse.cpp' || echo '$(srcdir)/'`src/volanalyse.cpp

src/libopensmile_la-fingerprint.lo: src/fingerprint.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-fingerprint.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-fingerprint.Tpo -c -o src/libopensmile_la-fingerprint.lo `test -f 'src/fingerprint.cpp' || echo '$(srcdir)/'`src/fingerprint.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-fingerprint.Tpo src/$(DEPDIR)/libopensmile_la-fingerprint.Plo
#	source='src/fingerprint.cpp' object='src/libopensmile_la-fingerprint.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-fingerprint.lo `test -f 'src/fingerprint.cpp' || echo '$(srcdir)/'`src/fingerprint.cpp

src/libopensmile_la-waveSink.lo: src/waveSink.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-waveSink.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-waveSink.Tpo -c -o src/libopensmile_la-waveSink.lo `test -f 'src/waveSink.cpp' || echo '$(srcdir)/'`src/waveSink.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-waveSink.Tpo src/$(DEPDIR)/libopensmile_la-waveSink.Plo
#	source='src/waveSink.cpp' object='src/libopensmile_la-waveSink.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-waveSink.lo `test -f 'src/waveSink.cpp' || echo '$(srcdir)/'`src/waveSink.cpp

src/libopensmile_la-waveSinkCut.lo: src/waveSinkCut.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-waveSinkCut.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-waveSinkCut.Tpo -c -o src/libopensmile_la-waveSinkCut.lo `test -f 'src/waveSinkCut.cpp' || echo '$(srcdir)/'`src/waveSinkCut.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-waveSinkCut.Tpo src/$(DEPDIR)/libopensmile_la-waveSinkCut.Plo
#	source='src/waveSinkCut.cpp' object='src/libopensmile_la-waveSinkCut.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-waveSinkCut.lo `test -f 'src/waveSinkCut.cpp' || echo '$(srcdir)/'`src/waveSinkCut.cpp

src/libopensmile_la-pitchBase.lo: src/pitchBase.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchBase.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchBase.Tpo -c -o src/libopensmile_la-pitchBase.lo `test -f 'src/pitchBase.cpp' || echo '$(srcdir)/'`src/pitchBase.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchBase.Tpo src/$(DEPDIR)/libopensmile_la-pitchBase.Plo
#	source='src/pitchBase.cpp' object='src/libopensmile_la-pitchBase.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchBase.lo `test -f 'src/pitchBase.cpp' || echo '$(srcdir)/'`src/pitchBase.cpp

src/libopensmile_la-pitchShs.lo: src/pitchShs.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchShs.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchShs.Tpo -c -o src/libopensmile_la-pitchShs.lo `test -f 'src/pitchShs.cpp' || echo '$(srcdir)/'`src/pitchShs.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchShs.Tpo src/$(DEPDIR)/libopensmile_la-pitchShs.Plo
#	source='src/pitchShs.cpp' object='src/libopensmile_la-pitchShs.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchShs.lo `test -f 'src/pitchShs.cpp' || echo '$(srcdir)/'`src/pitchShs.cpp

src/libopensmile_la-pitchACF.lo: src/pitchACF.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchACF.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchACF.Tpo -c -o src/libopensmile_la-pitchACF.lo `test -f 'src/pitchACF.cpp' || echo '$(srcdir)/'`src/pitchACF.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchACF.Tpo src/$(DEPDIR)/libopensmile_la-pitchACF.Plo
#	source='src/pitchACF.cpp' object='src/libopensmile_la-pitchACF.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchACF.lo `test -f 'src/pitchACF.cpp' || echo '$(srcdir)/'`src/pitchACF.cpp

src/libopensmile_la-pitchHpsLinf.lo: src/pitchHpsLinf.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchHpsLinf.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchHpsLinf.Tpo -c -o src/libopensmile_la-pitchHpsLinf.lo `test -f 'src/pitchHpsLinf.cpp' || echo '$(srcdir)/'`src/pitchHpsLinf.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchHpsLinf.Tpo src/$(DEPDIR)/libopensmile_la-pitchHpsLinf.Plo
#	source='src/pitchHpsLinf.cpp' object='src/libopensmile_la-pitchHpsLinf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchHpsLinf.lo `test -f 'src/pitchHpsLinf.cpp' || echo '$(srcdir)/'`src/pitchHpsLinf.cpp

src/libopensmile_la-pitchAmdfAcf.lo: src/pitchAmdfAcf.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchAmdfAcf.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchAmdfAcf.Tpo -c -o src/libopensmile_la-pitchAmdfAcf.lo `test -f 'src/pitchAmdfAcf.cpp' || echo '$(srcdir)/'`src/pitchAmdfAcf.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchAmdfAcf.Tpo src/$(DEPDIR)/libopensmile_la-pitchAmdfAcf.Plo
#	source='src/pitchAmdfAcf.cpp' object='src/libopensmile_la-pitchAmdfAcf.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchAmdfAcf.lo `test -f 'src/pitchAmdfAcf.cpp' || echo '$(srcdir)/'`src/pitchAmdfAcf.cpp

src/libopensmile_la-pitchSmoother.lo: src/pitchSmoother.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchSmoother.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchSmoother.Tpo -c -o src/libopensmile_la-pitchSmoother.lo `test -f 'src/pitchSmoother.cpp' || echo '$(srcdir)/'`src/pitchSmoother.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchSmoother.Tpo src/$(DEPDIR)/libopensmile_la-pitchSmoother.Plo
#	source='src/pitchSmoother.cpp' object='src/libopensmile_la-pitchSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchSmoother.lo `test -f 'src/pitchSmoother.cpp' || echo '$(srcdir)/'`src/pitchSmoother.cpp

src/libopensmile_la-pitchJitter.lo: src/pitchJitter.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchJitter.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchJitter.Tpo -c -o src/libopensmile_la-pitchJitter.lo `test -f 'src/pitchJitter.cpp' || echo '$(srcdir)/'`src/pitchJitter.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchJitter.Tpo src/$(DEPDIR)/libopensmile_la-pitchJitter.Plo
#	source='src/pitchJitter.cpp' object='src/libopensmile_la-pitchJitter.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchJitter.lo `test -f 'src/pitchJitter.cpp' || echo '$(srcdir)/'`src/pitchJitter.cpp

src/libopensmile_la-pitchDirection.lo: src/pitchDirection.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-pitchDirection.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-pitchDirection.Tpo -c -o src/libopensmile_la-pitchDirection.lo `test -f 'src/pitchDirection.cpp' || echo '$(srcdir)/'`src/pitchDirection.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-pitchDirection.Tpo src/$(DEPDIR)/libopensmile_la-pitchDirection.Plo
#	source='src/pitchDirection.cpp' object='src/libopensmile_la-pitchDirection.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-pitchDirection.lo `test -f 'src/pitchDirection.cpp' || echo '$(srcdir)/'`src/pitchDirection.cpp

src/libopensmile_la-mzcr.lo: src/mzcr.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-mzcr.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-mzcr.Tpo -c -o src/libopensmile_la-mzcr.lo `test -f 'src/mzcr.cpp' || echo '$(srcdir)/'`src/mzcr.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-mzcr.Tpo src/$(DEPDIR)/libopensmile_la-mzcr.Plo
#	source='src/mzcr.cpp' object='src/libopensmile_la-mzcr.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-mzcr.lo `test -f 'src/mzcr.cpp' || echo '$(srcdir)/'`src/mzcr.cpp

src/libopensmile_la-lpc.lo: src/lpc.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-lpc.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-lpc.Tpo -c -o src/libopensmile_la-lpc.lo `test -f 'src/lpc.cpp' || echo '$(srcdir)/'`src/lpc.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-lpc.Tpo src/$(DEPDIR)/libopensmile_la-lpc.Plo
#	source='src/lpc.cpp' object='src/libopensmile_la-lpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-lpc.lo `test -f 'src/lpc.cpp' || echo '$(srcdir)/'`src/lpc.cpp

src/libopensmile_la-lsp.lo: src/lsp.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-lsp.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-lsp.Tpo -c -o src/libopensmile_la-lsp.lo `test -f 'src/lsp.cpp' || echo '$(srcdir)/'`src/lsp.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-lsp.Tpo src/$(DEPDIR)/libopensmile_la-lsp.Plo
#	source='src/lsp.cpp' object='src/libopensmile_la-lsp.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-lsp.lo `test -f 'src/lsp.cpp' || echo '$(srcdir)/'`src/lsp.cpp

src/libopensmile_la-formantLpc.lo: src/formantLpc.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-formantLpc.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-formantLpc.Tpo -c -o src/libopensmile_la-formantLpc.lo `test -f 'src/formantLpc.cpp' || echo '$(srcdir)/'`src/formantLpc.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-formantLpc.Tpo src/$(DEPDIR)/libopensmile_la-formantLpc.Plo
#	source='src/formantLpc.cpp' object='src/libopensmile_la-formantLpc.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-formantLpc.lo `test -f 'src/formantLpc.cpp' || echo '$(srcdir)/'`src/formantLpc.cpp

src/libopensmile_la-formantSmoother.lo: src/formantSmoother.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-formantSmoother.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-formantSmoother.Tpo -c -o src/libopensmile_la-formantSmoother.lo `test -f 'src/formantSmoother.cpp' || echo '$(srcdir)/'`src/formantSmoother.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-formantSmoother.Tpo src/$(DEPDIR)/libopensmile_la-formantSmoother.Plo
#	source='src/formantSmoother.cpp' object='src/libopensmile_la-formantSmoother.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-formantSmoother.lo `test -f 'src/formantSmoother.cpp' || echo '$(srcdir)/'`src/formantSmoother.cpp

src/libopensmile_la-echoAttenuator.lo: src/echoAttenuator.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-echoAttenuator.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-echoAttenuator.Tpo -c -o src/libopensmile_la-echoAttenuator.lo `test -f 'src/echoAttenuator.cpp' || echo '$(srcdir)/'`src/echoAttenuator.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-echoAttenuator.Tpo src/$(DEPDIR)/libopensmile_la-echoAttenuator.Plo
#	source='src/echoAttenuator.cpp' object='src/libopensmile_la-echoAttenuator.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-echoAttenuator.lo `test -f 'src/echoAttenuator.cpp' || echo '$(srcdir)/'`src/echoAttenuator.cpp

src/libopensmile_la-echoCanceller.lo: src/echoCanceller.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-echoCanceller.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-echoCanceller.Tpo -c -o src/libopensmile_la-echoCanceller.lo `test -f 'src/echoCanceller.cpp' || echo '$(srcdir)/'`src/echoCanceller.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-echoCanceller.Tpo src/$(DEPDIR)/libopensmile_la-echoCanceller.Plo
#	source='src/echoCanceller.cpp' object='src/libopensmile_la-echoCanceller.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-echoCanceller.lo `test -f 'src/echoCanceller.cpp' || echo '$(srcdir)/'`src/echoCanceller.cpp

src/libopensmile_la-speexPreprocess.lo: src/speexPreprocess.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-speexPreprocess.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-speexPreprocess.Tpo -c -o src/libopensmile_la-speexPreprocess.lo `test -f 'src/speexPreprocess.cpp' || echo '$(srcdir)/'`src/speexPreprocess.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-speexPreprocess.Tpo src/$(DEPDIR)/libopensmile_la-speexPreprocess.Plo
#	source='src/speexPreprocess.cpp' object='src/libopensmile_la-speexPreprocess.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-speexPreprocess.lo `test -f 'src/speexPreprocess.cpp' || echo '$(srcdir)/'`src/speexPreprocess.cpp

src/libopensmile_la-speexResample.lo: src/speexResample.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-speexResample.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-speexResample.Tpo -c -o src/libopensmile_la-speexResample.lo `test -f 'src/speexResample.cpp' || echo '$(srcdir)/'`src/speexResample.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-speexResample.Tpo src/$(DEPDIR)/libopensmile_la-speexResample.Plo
#	source='src/speexResample.cpp' object='src/libopensmile_la-speexResample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-speexResample.lo `test -f 'src/speexResample.cpp' || echo '$(srcdir)/'`src/speexResample.cpp

src/libopensmile_la-smileResample.lo: src/smileResample.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-smileResample.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-smileResample.Tpo -c -o src/libopensmile_la-smileResample.lo `test -f 'src/smileResample.cpp' || echo '$(srcdir)/'`src/smileResample.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-smileResample.Tpo src/$(DEPDIR)/libopensmile_la-smileResample.Plo
#	source='src/smileResample.cpp' object='src/libopensmile_la-smileResample.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-smileResample.lo `test -f 'src/smileResample.cpp' || echo '$(srcdir)/'`src/smileResample.cpp

src/libopensmile_la-libSamplerate.lo: src/libSamplerate.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-libSamplerate.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-libSamplerate.Tpo -c -o src/libopensmile_la-libSamplerate.lo `test -f 'src/libSamplerate.cpp' || echo '$(srcdir)/'`src/libSamplerate.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-libSamplerate.Tpo src/$(DEPDIR)/libopensmile_la-libSamplerate.Plo
#	source='src/libSamplerate.cpp' object='src/libopensmile_la-libSamplerate.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-libSamplerate.lo `test -f 'src/libSamplerate.cpp' || echo '$(srcdir)/'`src/libSamplerate.cpp

src/libopensmile_la-stretchToTime.lo: src/stretchToTime.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-stretchToTime.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-stretchToTime.Tpo -c -o src/libopensmile_la-stretchToTime.lo `test -f 'src/stretchToTime.cpp' || echo '$(srcdir)/'`src/stretchToTime.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-stretchToTime.Tpo src/$(DEPDIR)/libopensmile_la-stretchToTime.Plo
#	source='src/stretchToTime.cpp' object='src/libopensmile_la-stretchToTime.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-stretchToTime.lo `test -f 'src/stretchToTime.cpp' || echo '$(srcdir)/'`src/stretchToTime.cpp

src/libopensmile_la-chromaPerFrame.lo: src/chromaPerFrame.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-chromaPerFrame.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-chromaPerFrame.Tpo -c -o src/libopensmile_la-chromaPerFrame.lo `test -f 'src/chromaPerFrame.cpp' || echo '$(srcdir)/'`src/chromaPerFrame.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-chromaPerFrame.Tpo src/$(DEPDIR)/libopensmile_la-chromaPerFrame.Plo
#	source='src/chromaPerFrame.cpp' object='src/libopensmile_la-chromaPerFrame.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-chromaPerFrame.lo `test -f 'src/chromaPerFrame.cpp' || echo '$(srcdir)/'`src/chromaPerFrame.cpp

src/libopensmile_la-chordFeatures.lo: src/chordFeatures.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-chordFeatures.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-chordFeatures.Tpo -c -o src/libopensmile_la-chordFeatures.lo `test -f 'src/chordFeatures.cpp' || echo '$(srcdir)/'`src/chordFeatures.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-chordFeatures.Tpo src/$(DEPDIR)/libopensmile_la-chordFeatures.Plo
#	source='src/chordFeatures.cpp' object='src/libopensmile_la-chordFeatures.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-chordFeatures.lo `test -f 'src/chordFeatures.cpp' || echo '$(srcdir)/'`src/chordFeatures.cpp

src/libopensmile_la-channelMixer.lo: src/channelMixer.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-channelMixer.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-channelMixer.Tpo -c -o src/libopensmile_la-channelMixer.lo `test -f 'src/channelMixer.cpp' || echo '$(srcdir)/'`src/channelMixer.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-channelMixer.Tpo src/$(DEPDIR)/libopensmile_la-channelMixer.Plo
#	source='src/channelMixer.cpp' object='src/libopensmile_la-channelMixer.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-channelMixer.lo `test -f 'src/channelMixer.cpp' || echo '$(srcdir)/'`src/channelMixer.cpp

svm/libopensmile_la-svm.lo: svm/svm.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT svm/libopensmile_la-svm.lo -MD -MP -MF svm/$(DEPDIR)/libopensmile_la-svm.Tpo -c -o svm/libopensmile_la-svm.lo `test -f 'svm/svm.cpp' || echo '$(srcdir)/'`svm/svm.cpp
	$(am__mv) svm/$(DEPDIR)/libopensmile_la-svm.Tpo svm/$(DEPDIR)/libopensmile_la-svm.Plo
#	source='svm/svm.cpp' object='svm/libopensmile_la-svm.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o svm/libopensmile_la-svm.lo `test -f 'svm/svm.cpp' || echo '$(srcdir)/'`svm/svm.cpp

src/libopensmile_la-nnlPlugin.lo: src/nnlPlugin.cpp
	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/libopensmile_la-nnlPlugin.lo -MD -MP -MF src/$(DEPDIR)/libopensmile_la-nnlPlugin.Tpo -c -o src/libopensmile_la-nnlPlugin.lo `test -f 'src/nnlPlugin.cpp' || echo '$(srcdir)/'`src/nnlPlugin.cpp
	$(am__mv) src/$(DEPDIR)/libopensmile_la-nnlPlugin.Tpo src/$(DEPDIR)/libopensmile_la-nnlPlugin.Plo
#	source='src/nnlPlugin.cpp' object='src/libopensmile_la-nnlPlugin.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LIBTOOL)  --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libopensmile_la_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/libopensmile_la-nnlPlugin.lo `test -f 'src/nnlPlugin.cpp' || echo '$(srcdir)/'`src/nnlPlugin.cpp

src/SMILExtract-SMILExtract.o: src/SMILExtract.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SMILExtract-SMILExtract.o -MD -MP -MF src/$(DEPDIR)/SMILExtract-SMILExtract.Tpo -c -o src/SMILExtract-SMILExtract.o `test -f 'src/SMILExtract.cpp' || echo '$(srcdir)/'`src/SMILExtract.cpp
	$(am__mv) src/$(DEPDIR)/SMILExtract-SMILExtract.Tpo src/$(DEPDIR)/SMILExtract-SMILExtract.Po
#	source='src/SMILExtract.cpp' object='src/SMILExtract-SMILExtract.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SMILExtract-SMILExtract.o `test -f 'src/SMILExtract.cpp' || echo '$(srcdir)/'`src/SMILExtract.cpp

src/SMILExtract-SMILExtract.obj: src/SMILExtract.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT src/SMILExtract-SMILExtract.obj -MD -MP -MF src/$(DEPDIR)/SMILExtract-SMILExtract.Tpo -c -o src/SMILExtract-SMILExtract.obj `if test -f 'src/SMILExtract.cpp'; then $(CYGPATH_W) 'src/SMILExtract.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SMILExtract.cpp'; fi`
	$(am__mv) src/$(DEPDIR)/SMILExtract-SMILExtract.Tpo src/$(DEPDIR)/SMILExtract-SMILExtract.Po
#	source='src/SMILExtract.cpp' object='src/SMILExtract-SMILExtract.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(SMILExtract_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o src/SMILExtract-SMILExtract.obj `if test -f 'src/SMILExtract.cpp'; then $(CYGPATH_W) 'src/SMILExtract.cpp'; else $(CYGPATH_W) '$(srcdir)/src/SMILExtract.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf src/.libs src/_libs
	-rm -rf svm/.libs svm/_libs

distclean-libtool:
	-rm -f libtool config.lt

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-lzma: distdir
	tardir=$(distdir) && $(am__tar) | lzma -9 -c >$(distdir).tar.lzma
	$(am__remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | xz -c >$(distdir).tar.xz
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lzma*) \
	  lzma -dc $(distdir).tar.lzma | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@$(am__cd) '$(distuninstallcheck_dir)' \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) config.h
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)
	-rm -f svm/$(DEPDIR)/$(am__dirstamp)
	-rm -f svm/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/$(DEPDIR) svm/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/$(DEPDIR) svm/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool ctags dist dist-all dist-bzip2 dist-gzip \
	dist-lzma dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-libtool distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLTLIBRARIES


# endif 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
